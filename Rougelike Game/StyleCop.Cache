<stylecopresultscache>
  <version>12</version>
  <sourcecode name="InventoryUI.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/04/19 20:31:29.167</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The class must have a documentation header.</context>
        <line>5</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <project key="-1564201247">
    <configuration>DEBUG;TRACE;UNITY_5_3_OR_NEWER;UNITY_5_4_OR_NEWER;UNITY_5_5_OR_NEWER;UNITY_5_6_OR_NEWER;UNITY_2017_1_OR_NEWER;UNITY_2017_2_OR_NEWER;UNITY_2017_3_OR_NEWER;UNITY_2017_3_1;UNITY_2017_3;UNITY_2017;ENABLE_AUDIO;ENABLE_CACHING;ENABLE_CLOTH;ENABLE_DUCK_TYPING;ENABLE_GENERICS;ENABLE_PVR_GI;ENABLE_MICROPHONE;ENABLE_MULTIPLE_DISPLAYS;ENABLE_PHYSICS;ENABLE_SPRITERENDERER_FLIPPING;ENABLE_SPRITES;ENABLE_GRID;ENABLE_TILEMAP;ENABLE_TERRAIN;ENABLE_RAKNET;ENABLE_DIRECTOR;ENABLE_UNET;ENABLE_LZMA;ENABLE_UNITYEVENTS;ENABLE_WEBCAM;ENABLE_WWW;ENABLE_CLOUD_SERVICES_COLLAB;ENABLE_CLOUD_SERVICES_COLLAB_SOFTLOCKS;ENABLE_CLOUD_SERVICES_ADS;ENABLE_CLOUD_HUB;ENABLE_CLOUD_PROJECT_ID;ENABLE_CLOUD_SERVICES_USE_WEBREQUEST;ENABLE_CLOUD_SERVICES_UNET;ENABLE_CLOUD_SERVICES_BUILD;ENABLE_CLOUD_LICENSE;ENABLE_EDITOR_HUB;ENABLE_EDITOR_HUB_LICENSE;ENABLE_WEBSOCKET_CLIENT;ENABLE_DIRECTOR_AUDIO;ENABLE_DIRECTOR_TEXTURE;ENABLE_TIMELINE;ENABLE_EDITOR_METRICS;ENABLE_EDITOR_METRICS_CACHING;ENABLE_NATIVE_ARRAY;ENABLE_SPRITE_MASKING;INCLUDE_DYNAMIC_GI;INCLUDE_GI;ENABLE_MONO_BDWGC;PLATFORM_SUPPORTS_MONO;RENDER_SOFTWARE_CURSOR;INCLUDE_PUBNUB;ENABLE_PLAYMODE_TESTS_RUNNER;ENABLE_VIDEO;ENABLE_RMGUI;ENABLE_PACKMAN;ENABLE_CUSTOM_RENDER_TEXTURE;ENABLE_STYLE_SHEETS;ENABLE_LOCALIZATION;PLATFORM_STANDALONE_WIN;PLATFORM_STANDALONE;UNITY_STANDALONE_WIN;UNITY_STANDALONE;ENABLE_SUBSTANCE;ENABLE_RUNTIME_GI;ENABLE_MOVIES;ENABLE_NETWORK;ENABLE_CRUNCH_TEXTURE_COMPRESSION;ENABLE_UNITYWEBREQUEST;ENABLE_CLOUD_SERVICES;ENABLE_CLOUD_SERVICES_ANALYTICS;ENABLE_CLOUD_SERVICES_PURCHASING;ENABLE_CLOUD_SERVICES_CRASH_REPORTING;ENABLE_EVENT_QUEUE;ENABLE_CLUSTERINPUT;ENABLE_VR;ENABLE_AR;ENABLE_WEBSOCKET_HOST;ENABLE_MONO;NET_2_0_SUBSET;ENABLE_PROFILER;UNITY_ASSERTIONS;UNITY_EDITOR;UNITY_EDITOR_64;UNITY_EDITOR_WIN;ENABLE_NATIVE_ARRAY_CHECKS;UNITY_TEAM_LICENSE</configuration>
  </project>
  <sourcecode name="CameraMovement.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 03:31:00.328</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to player must begin with the 'this.', 'base.', 'object.' or 'CameraMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>14</line>
        <index>307</index>
        <endIndex>312</endIndex>
        <startLine>14</startLine>
        <startColumn>9</startColumn>
        <endLine>14</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pixelMovement must begin with the 'this.', 'base.', 'object.' or 'CameraMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>15</line>
        <index>379</index>
        <endIndex>391</endIndex>
        <startLine>15</startLine>
        <startColumn>9</startColumn>
        <endLine>15</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;PixelMovement&gt; must begin with the 'this.', 'base.', 'object.' or 'CameraMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>15</line>
        <index>395</index>
        <endIndex>421</endIndex>
        <startLine>15</startLine>
        <startColumn>25</startColumn>
        <endLine>15</endLine>
        <endColumn>51</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="SingleLineCommentMustBePrecededByBlankLine" ruleCheckId="SA1515">
        <context>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to player must begin with the 'this.', 'base.', 'object.' or 'CameraMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>547</index>
        <endIndex>552</endIndex>
        <startLine>22</startLine>
        <startColumn>46</startColumn>
        <endLine>22</endLine>
        <endColumn>51</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to player must begin with the 'this.', 'base.', 'object.' or 'CameraMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>566</index>
        <endIndex>571</endIndex>
        <startLine>22</startLine>
        <startColumn>65</startColumn>
        <endLine>22</endLine>
        <endColumn>70</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pixelMovement must begin with the 'this.', 'base.', 'object.' or 'CameraMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>24</line>
        <index>701</index>
        <endIndex>713</endIndex>
        <startLine>24</startLine>
        <startColumn>13</startColumn>
        <endLine>24</endLine>
        <endColumn>25</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to player must begin with the 'this.', 'base.', 'object.' or 'CameraMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>20</line>
        <index>482</index>
        <endIndex>487</endIndex>
        <startLine>20</startLine>
        <startColumn>13</startColumn>
        <endLine>20</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="CameraScaler.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 03:32:40.566</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainBlankLinesAtEndOfFile" ruleCheckId="SA1518">
        <context>The code must not contain blank lines at the end of the file.</context>
        <line>45</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainMultipleBlankLinesInARow" ruleCheckId="SA1507">
        <context>The code must not contain multiple blank lines in a row.</context>
        <line>45</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: referenceOrthographicSize.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: referencePixelsPerUnit.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to UpdateScreen must begin with the 'this.', 'base.', 'object.' or 'CameraScaler.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>17</line>
        <index>437</index>
        <endIndex>448</endIndex>
        <startLine>17</startLine>
        <startColumn>9</startColumn>
        <endLine>17</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lastSize must begin with the 'this.', 'base.', 'object.' or 'CameraScaler.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>25</line>
        <index>619</index>
        <endIndex>626</endIndex>
        <startLine>25</startLine>
        <startColumn>9</startColumn>
        <endLine>25</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to referenceOrthographicSize must begin with the 'this.', 'base.', 'object.' or 'CameraScaler.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>676</index>
        <endIndex>700</endIndex>
        <startLine>26</startLine>
        <startColumn>31</startColumn>
        <endLine>26</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to referencePixelsPerUnit must begin with the 'this.', 'base.', 'object.' or 'CameraScaler.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>704</index>
        <endIndex>725</endIndex>
        <startLine>26</startLine>
        <startColumn>59</startColumn>
        <endLine>26</endLine>
        <endColumn>80</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lastSize must begin with the 'this.', 'base.', 'object.' or 'CameraScaler.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>29</line>
        <index>808</index>
        <endIndex>815</endIndex>
        <startLine>29</startLine>
        <startColumn>28</startColumn>
        <endLine>29</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to referencePixelsPerUnit must begin with the 'this.', 'base.', 'object.' or 'CameraScaler.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>29</line>
        <index>819</index>
        <endIndex>840</endIndex>
        <startLine>29</startLine>
        <startColumn>39</startColumn>
        <endLine>29</endLine>
        <endColumn>60</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>37</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to UpdateScreen must begin with the 'this.', 'base.', 'object.' or 'CameraScaler.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>41</line>
        <index>1292</index>
        <endIndex>1303</endIndex>
        <startLine>41</startLine>
        <startColumn>13</startColumn>
        <endLine>41</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lastSize must begin with the 'this.', 'base.', 'object.' or 'CameraScaler.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>39</line>
        <index>1258</index>
        <endIndex>1265</endIndex>
        <startLine>39</startLine>
        <startColumn>30</startColumn>
        <endLine>39</endLine>
        <endColumn>37</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="PixelMovement.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 03:33:14.202</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to position must begin with the 'this.', 'base.', 'object.' or 'PixelMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>12</line>
        <index>230</index>
        <endIndex>237</endIndex>
        <startLine>12</startLine>
        <startColumn>9</startColumn>
        <endLine>12</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to position must begin with the 'this.', 'base.', 'object.' or 'PixelMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>13</line>
        <index>291</index>
        <endIndex>298</endIndex>
        <startLine>13</startLine>
        <startColumn>30</startColumn>
        <endLine>13</endLine>
        <endColumn>37</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to position must begin with the 'this.', 'base.', 'object.' or 'PixelMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>18</line>
        <index>398</index>
        <endIndex>405</endIndex>
        <startLine>18</startLine>
        <startColumn>30</startColumn>
        <endLine>18</endLine>
        <endColumn>37</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to position must begin with the 'this.', 'base.', 'object.' or 'PixelMovement.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>23</line>
        <index>506</index>
        <endIndex>513</endIndex>
        <startLine>23</startLine>
        <startColumn>9</startColumn>
        <endLine>23</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="EnemyMovement.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 03:37:28.045</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: turnDelay.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: enemySight.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: playerLayer.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: pathfindingLayer.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: attackAnimator.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>30</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>30</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>35</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attackAnimator must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>37</line>
        <index>1239</index>
        <endIndex>1252</endIndex>
        <startLine>37</startLine>
        <startColumn>9</startColumn>
        <endLine>37</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attackAnimator must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>37</line>
        <index>1262</index>
        <endIndex>1275</endIndex>
        <startLine>37</startLine>
        <startColumn>32</startColumn>
        <endLine>37</endLine>
        <endColumn>45</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to turnDelay must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>37</line>
        <index>1285</index>
        <endIndex>1293</endIndex>
        <startLine>37</startLine>
        <startColumn>55</startColumn>
        <endLine>37</endLine>
        <endColumn>63</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animator must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>38</line>
        <index>1305</index>
        <endIndex>1312</endIndex>
        <startLine>38</startLine>
        <startColumn>9</startColumn>
        <endLine>38</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;Animator&gt; must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>38</line>
        <index>1316</index>
        <endIndex>1337</endIndex>
        <startLine>38</startLine>
        <startColumn>20</startColumn>
        <endLine>38</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to target must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>39</line>
        <index>1351</index>
        <endIndex>1356</endIndex>
        <startLine>39</startLine>
        <startColumn>9</startColumn>
        <endLine>39</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerCol must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>40</line>
        <index>1437</index>
        <endIndex>1445</endIndex>
        <startLine>40</startLine>
        <startColumn>9</startColumn>
        <endLine>40</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to target must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>40</line>
        <index>1449</index>
        <endIndex>1454</endIndex>
        <startLine>40</startLine>
        <startColumn>21</startColumn>
        <endLine>40</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to enemyCol must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>41</line>
        <index>1507</index>
        <endIndex>1514</endIndex>
        <startLine>41</startLine>
        <startColumn>9</startColumn>
        <endLine>41</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;BoxCollider2D&gt; must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>41</line>
        <index>1518</index>
        <endIndex>1544</endIndex>
        <startLine>41</startLine>
        <startColumn>20</startColumn>
        <endLine>41</endLine>
        <endColumn>46</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to stats must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>42</line>
        <index>1558</index>
        <endIndex>1562</endIndex>
        <startLine>42</startLine>
        <startColumn>9</startColumn>
        <endLine>42</endLine>
        <endColumn>13</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;EnemyStats&gt; must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>42</line>
        <index>1566</index>
        <endIndex>1589</endIndex>
        <startLine>42</startLine>
        <startColumn>17</startColumn>
        <endLine>42</endLine>
        <endColumn>40</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Invoke must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>44</line>
        <index>1626</index>
        <endIndex>1631</endIndex>
        <startLine>44</startLine>
        <startColumn>9</startColumn>
        <endLine>44</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to turnDelay must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>44</line>
        <index>1666</index>
        <endIndex>1674</endIndex>
        <startLine>44</startLine>
        <startColumn>49</startColumn>
        <endLine>44</endLine>
        <endColumn>57</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>47</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>47</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all protected methods.</context>
        <line>98</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to StartCoroutine must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>49</line>
        <index>1729</index>
        <endIndex>1742</endIndex>
        <startLine>49</startLine>
        <startColumn>9</startColumn>
        <endLine>49</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moveCounter must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>49</line>
        <index>1744</index>
        <endIndex>1754</endIndex>
        <startLine>49</startLine>
        <startColumn>24</startColumn>
        <endLine>49</endLine>
        <endColumn>34</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>56</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="SingleLineCommentMustBePrecededByBlankLine" ruleCheckId="SA1515">
        <context>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>66</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="SingleLineCommentMustBePrecededByBlankLine" ruleCheckId="SA1515">
        <context>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>87</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>56</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>method names begin with an upper-case letter: moveCounter.</context>
        <line>56</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParametersMustBeOnSameLineOrSeparateLines" ruleCheckId="SA1117">
        <context>All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</context>
        <line>63</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="SplitParametersMustStartOnLineAfterDeclaration" ruleCheckId="SA1116">
        <context>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</context>
        <line>63</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>64</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>65</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParametersMustBeOnSameLineOrSeparateLines" ruleCheckId="SA1117">
        <context>All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</context>
        <line>70</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="SplitParametersMustStartOnLineAfterDeclaration" ruleCheckId="SA1116">
        <context>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</context>
        <line>70</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>71</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to enemyCol must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>62</line>
        <index>2069</index>
        <endIndex>2076</endIndex>
        <startLine>62</startLine>
        <startColumn>13</startColumn>
        <endLine>62</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to target must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>64</line>
        <index>2235</index>
        <endIndex>2240</endIndex>
        <startLine>64</startLine>
        <startColumn>39</startColumn>
        <endLine>64</endLine>
        <endColumn>44</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pathfindingLayer must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>64</line>
        <index>2279</index>
        <endIndex>2294</endIndex>
        <startLine>64</startLine>
        <startColumn>83</startColumn>
        <endLine>64</endLine>
        <endColumn>98</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerLayer must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>64</line>
        <index>2298</index>
        <endIndex>2308</endIndex>
        <startLine>64</startLine>
        <startColumn>102</startColumn>
        <endLine>64</endLine>
        <endColumn>112</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to enemySight must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>65</line>
        <index>2328</index>
        <endIndex>2337</endIndex>
        <startLine>65</startLine>
        <startColumn>17</startColumn>
        <endLine>65</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to altMove must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>65</line>
        <index>2340</index>
        <endIndex>2346</endIndex>
        <startLine>65</startLine>
        <startColumn>29</startColumn>
        <endLine>65</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to target must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>71</line>
        <index>2723</index>
        <endIndex>2728</endIndex>
        <startLine>71</startLine>
        <startColumn>43</startColumn>
        <endLine>71</endLine>
        <endColumn>48</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pathfindingLayer must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>71</line>
        <index>2751</index>
        <endIndex>2766</endIndex>
        <startLine>71</startLine>
        <startColumn>71</startColumn>
        <endLine>71</endLine>
        <endColumn>86</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to enemySight must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>71</line>
        <index>2769</index>
        <endIndex>2778</endIndex>
        <startLine>71</startLine>
        <startColumn>89</startColumn>
        <endLine>71</endLine>
        <endColumn>98</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to altMove must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>71</line>
        <index>2781</index>
        <endIndex>2787</endIndex>
        <startLine>71</startLine>
        <startColumn>101</startColumn>
        <endLine>71</endLine>
        <endColumn>107</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AttemptMove&lt;PlayerStats&gt; must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>81</line>
        <index>3246</index>
        <endIndex>3269</endIndex>
        <startLine>81</startLine>
        <startColumn>21</startColumn>
        <endLine>81</endLine>
        <endColumn>44</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to altMove must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>82</line>
        <index>3326</index>
        <endIndex>3332</endIndex>
        <startLine>82</startLine>
        <startColumn>21</startColumn>
        <endLine>82</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to altMove must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>82</line>
        <index>3337</index>
        <endIndex>3343</endIndex>
        <startLine>82</startLine>
        <startColumn>32</startColumn>
        <endLine>82</endLine>
        <endColumn>38</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to enemyCol must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>86</line>
        <index>3395</index>
        <endIndex>3402</endIndex>
        <startLine>86</startLine>
        <startColumn>13</startColumn>
        <endLine>86</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attackAnimator must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>88</line>
        <index>3497</index>
        <endIndex>3510</endIndex>
        <startLine>88</startLine>
        <startColumn>13</startColumn>
        <endLine>88</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to turnDelay must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>89</line>
        <index>3590</index>
        <endIndex>3598</endIndex>
        <startLine>89</startLine>
        <startColumn>45</startColumn>
        <endLine>89</endLine>
        <endColumn>53</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="DocumentationTextMustContainWhitespace" ruleCheckId="SA1630">
        <context>The documentation text within the param tag does not contain any whitespace between words, indicating that it most likely does not follow a proper grammatical structure required for documentation text.</context>
        <line>98</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animator must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>101</line>
        <index>3987</index>
        <endIndex>3994</endIndex>
        <startLine>101</startLine>
        <startColumn>9</startColumn>
        <endLine>101</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to stats must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>102</line>
        <index>4068</index>
        <endIndex>4072</endIndex>
        <startLine>102</startLine>
        <startColumn>45</startColumn>
        <endLine>102</endLine>
        <endColumn>49</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to stats must begin with the 'this.', 'base.', 'object.' or 'EnemyMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>102</line>
        <index>4085</index>
        <endIndex>4089</endIndex>
        <startLine>102</startLine>
        <startColumn>62</startColumn>
        <endLine>102</endLine>
        <endColumn>66</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="EnemyStats.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 03:43:48.012</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" ruleCheckId="SA1208">
        <context>System using directives must be placed before all other using directives.</context>
        <line>3</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: minAttack.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: maxAttack.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: maxHealth.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: level.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: lootBagPrefab.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: bagLayerMask.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: dropRange.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: damageCounter.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to damageText must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>25</line>
        <index>633</index>
        <endIndex>642</endIndex>
        <startLine>25</startLine>
        <startColumn>9</startColumn>
        <endLine>25</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to transform must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>25</line>
        <index>694</index>
        <endIndex>702</endIndex>
        <startLine>25</startLine>
        <startColumn>70</startColumn>
        <endLine>25</endLine>
        <endColumn>78</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to healthSlider must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>715</index>
        <endIndex>726</endIndex>
        <startLine>26</startLine>
        <startColumn>9</startColumn>
        <endLine>26</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to transform must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>780</index>
        <endIndex>788</endIndex>
        <startLine>26</startLine>
        <startColumn>74</startColumn>
        <endLine>26</endLine>
        <endColumn>82</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animator must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>27</line>
        <index>801</index>
        <endIndex>808</endIndex>
        <startLine>27</startLine>
        <startColumn>9</startColumn>
        <endLine>27</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;Animator&gt; must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>27</line>
        <index>812</index>
        <endIndex>833</endIndex>
        <startLine>27</startLine>
        <startColumn>20</startColumn>
        <endLine>27</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>28</line>
        <index>847</index>
        <endIndex>852</endIndex>
        <startLine>28</startLine>
        <startColumn>9</startColumn>
        <endLine>28</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxHealth must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>28</line>
        <index>856</index>
        <endIndex>864</endIndex>
        <startLine>28</startLine>
        <startColumn>18</startColumn>
        <endLine>28</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementDocumentationHeaderMustBePrecededByBlankLine" ruleCheckId="SA1514">
        <context>A documentation header must be preceded by a blank line or must be the first item in its scope.</context>
        <line>30</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>1116</index>
        <endIndex>1121</endIndex>
        <startLine>36</startLine>
        <startColumn>9</startColumn>
        <endLine>36</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>1137</index>
        <endIndex>1142</endIndex>
        <startLine>36</startLine>
        <startColumn>30</startColumn>
        <endLine>36</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>1157</index>
        <endIndex>1162</endIndex>
        <startLine>36</startLine>
        <startColumn>50</startColumn>
        <endLine>36</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to damageCounter must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>37</line>
        <index>1175</index>
        <endIndex>1187</endIndex>
        <startLine>37</startLine>
        <startColumn>9</startColumn>
        <endLine>37</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animator must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>38</line>
        <index>1220</index>
        <endIndex>1227</endIndex>
        <startLine>38</startLine>
        <startColumn>9</startColumn>
        <endLine>38</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to damageText must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>39</line>
        <index>1260</index>
        <endIndex>1269</endIndex>
        <startLine>39</startLine>
        <startColumn>9</startColumn>
        <endLine>39</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to healthSlider must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>40</line>
        <index>1300</index>
        <endIndex>1311</endIndex>
        <startLine>40</startLine>
        <startColumn>9</startColumn>
        <endLine>40</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>40</line>
        <index>1321</index>
        <endIndex>1326</endIndex>
        <startLine>40</startLine>
        <startColumn>30</startColumn>
        <endLine>40</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxHealth must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>40</line>
        <index>1338</index>
        <endIndex>1346</endIndex>
        <startLine>40</startLine>
        <startColumn>47</startColumn>
        <endLine>40</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Death must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>43</line>
        <index>1405</index>
        <endIndex>1409</endIndex>
        <startLine>43</startLine>
        <startColumn>13</startColumn>
        <endLine>43</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>41</line>
        <index>1368</index>
        <endIndex>1373</endIndex>
        <startLine>41</startLine>
        <startColumn>13</startColumn>
        <endLine>41</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="UseStringEmptyForEmptyStrings" ruleCheckId="SA1122">
        <context>Use string.Empty rather than "".</context>
        <line>39</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>40</line>
        <index>1337</index>
        <endIndex>1337</endIndex>
        <startLine>40</startLine>
        <startColumn>46</startColumn>
        <endLine>40</endLine>
        <endColumn>46</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to level must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>52</line>
        <index>1671</index>
        <endIndex>1675</endIndex>
        <startLine>52</startLine>
        <startColumn>98</startColumn>
        <endLine>52</endLine>
        <endColumn>102</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to dropRange must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>52</line>
        <index>1678</index>
        <endIndex>1686</endIndex>
        <startLine>52</startLine>
        <startColumn>105</startColumn>
        <endLine>52</endLine>
        <endColumn>113</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetBag must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>56</line>
        <index>1841</index>
        <endIndex>1846</endIndex>
        <startLine>56</startLine>
        <startColumn>35</startColumn>
        <endLine>56</endLine>
        <endColumn>40</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to DropNewBag must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>63</line>
        <index>2011</index>
        <endIndex>2020</endIndex>
        <startLine>63</startLine>
        <startColumn>17</startColumn>
        <endLine>63</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Destroy must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>67</line>
        <index>2071</index>
        <endIndex>2077</endIndex>
        <startLine>67</startLine>
        <startColumn>9</startColumn>
        <endLine>67</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to gameObject must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>67</line>
        <index>2079</index>
        <endIndex>2088</endIndex>
        <startLine>67</startLine>
        <startColumn>17</startColumn>
        <endLine>67</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>55</line>
        <index>1748</index>
        <endIndex>1804</endIndex>
        <startLine>55</startLine>
        <startColumn>13</startColumn>
        <endLine>55</endLine>
        <endColumn>69</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParametersMustBeDocumented" ruleCheckId="SA1611">
        <context>The documentation header must contain param tags matching the element's parameter list.</context>
        <line>73</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootBagPrefab must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>75</line>
        <index>2303</index>
        <endIndex>2315</endIndex>
        <startLine>75</startLine>
        <startColumn>35</startColumn>
        <endLine>75</endLine>
        <endColumn>47</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>85</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to bagLayerMask must begin with the 'this.', 'base.', 'object.' or 'EnemyStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>87</line>
        <index>2712</index>
        <endIndex>2723</endIndex>
        <startLine>87</startLine>
        <startColumn>80</startColumn>
        <endLine>87</endLine>
        <endColumn>91</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="MovementTracker.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 07:33:17.394</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" ruleCheckId="SA1208">
        <context>System using directives must be placed before all other using directives.</context>
        <line>2</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="pos" /&gt;' parameter must not be empty.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to claimedSpots must begin with the 'this.', 'base.', 'object.' or 'MovementTracker.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>17</line>
        <index>535</index>
        <endIndex>546</endIndex>
        <startLine>17</startLine>
        <startColumn>9</startColumn>
        <endLine>17</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="pos" /&gt;' parameter must not be empty.</context>
        <line>24</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to claimedSpots must begin with the 'this.', 'base.', 'object.' or 'MovementTracker.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>756</index>
        <endIndex>767</endIndex>
        <startLine>26</startLine>
        <startColumn>9</startColumn>
        <endLine>26</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="pos" /&gt;' parameter must not be empty.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to claimedSpots must begin with the 'this.', 'base.', 'object.' or 'MovementTracker.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>1005</index>
        <endIndex>1016</endIndex>
        <startLine>36</startLine>
        <startColumn>16</startColumn>
        <endLine>36</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="MovingObject.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 07:37:03.586</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" ruleCheckId="SA1208">
        <context>System using directives must be placed before all other using directives.</context>
        <line>2</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: moveTime.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: blockingLayer.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: moving.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="SingleLineCommentMustBePrecededByBlankLine" ruleCheckId="SA1515">
        <context>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to rb2D must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>21</line>
        <index>595</index>
        <endIndex>598</endIndex>
        <startLine>21</startLine>
        <startColumn>9</startColumn>
        <endLine>21</endLine>
        <endColumn>12</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;Rigidbody2D&gt; must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>21</line>
        <index>602</index>
        <endIndex>626</endIndex>
        <startLine>21</startLine>
        <startColumn>16</startColumn>
        <endLine>21</endLine>
        <endColumn>40</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moveManager must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>640</index>
        <endIndex>650</endIndex>
        <startLine>22</startLine>
        <startColumn>9</startColumn>
        <endLine>22</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inverseMoveTime must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>24</line>
        <index>774</index>
        <endIndex>788</endIndex>
        <startLine>24</startLine>
        <startColumn>9</startColumn>
        <endLine>24</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moveTime must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>24</line>
        <index>797</index>
        <endIndex>804</endIndex>
        <startLine>24</startLine>
        <startColumn>32</startColumn>
        <endLine>24</endLine>
        <endColumn>39</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the summary tag contains incorrectly spelled words: 'raycast'</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="dir" /&gt;' parameter must not be empty.</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="hit" /&gt;' parameter must not be empty.</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to blockingLayer must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>40</line>
        <index>1369</index>
        <endIndex>1381</endIndex>
        <startLine>40</startLine>
        <startColumn>46</startColumn>
        <endLine>40</endLine>
        <endColumn>58</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moveManager must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>46</line>
        <index>1544</index>
        <endIndex>1554</endIndex>
        <startLine>46</startLine>
        <startColumn>13</startColumn>
        <endLine>46</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to StartCoroutine must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>47</line>
        <index>1608</index>
        <endIndex>1621</endIndex>
        <startLine>47</startLine>
        <startColumn>13</startColumn>
        <endLine>47</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SmoothMovement must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>47</line>
        <index>1623</index>
        <endIndex>1636</endIndex>
        <startLine>47</startLine>
        <startColumn>28</startColumn>
        <endLine>47</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="end" /&gt;' parameter must not be empty.</context>
        <line>60</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>60</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="SingleLineCommentMustBePrecededByBlankLine" ruleCheckId="SA1515">
        <context>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>63</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="SingleLineCommentMustBePrecededByBlankLine" ruleCheckId="SA1515">
        <context>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>65</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moving must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>62</line>
        <index>1974</index>
        <endIndex>1979</endIndex>
        <startLine>62</startLine>
        <startColumn>9</startColumn>
        <endLine>62</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to rb2D must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>64</line>
        <index>2086</index>
        <endIndex>2089</endIndex>
        <startLine>64</startLine>
        <startColumn>39</startColumn>
        <endLine>64</endLine>
        <endColumn>42</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to rb2D must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>70</line>
        <index>2503</index>
        <endIndex>2506</endIndex>
        <startLine>70</startLine>
        <startColumn>55</startColumn>
        <endLine>70</endLine>
        <endColumn>58</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inverseMoveTime must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>70</line>
        <index>2523</index>
        <endIndex>2537</endIndex>
        <startLine>70</startLine>
        <startColumn>75</startColumn>
        <endLine>70</endLine>
        <endColumn>89</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to rb2D must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>71</line>
        <index>2576</index>
        <endIndex>2579</endIndex>
        <startLine>71</startLine>
        <startColumn>13</startColumn>
        <endLine>71</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to rb2D must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>74</line>
        <index>2683</index>
        <endIndex>2686</endIndex>
        <startLine>74</startLine>
        <startColumn>37</startColumn>
        <endLine>74</endLine>
        <endColumn>40</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moveManager must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>80</line>
        <index>2833</index>
        <endIndex>2843</endIndex>
        <startLine>80</startLine>
        <startColumn>9</startColumn>
        <endLine>80</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moving must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>81</line>
        <index>2895</index>
        <endIndex>2900</endIndex>
        <startLine>81</startLine>
        <startColumn>9</startColumn>
        <endLine>81</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>64</line>
        <index>2111</index>
        <endIndex>2111</endIndex>
        <startLine>64</startLine>
        <startColumn>64</startColumn>
        <endLine>64</endLine>
        <endColumn>64</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>74</line>
        <index>2708</index>
        <endIndex>2708</endIndex>
        <startLine>74</startLine>
        <startColumn>62</startColumn>
        <endLine>74</endLine>
        <endColumn>62</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="dir" /&gt;' parameter must not be empty.</context>
        <line>89</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="GenericTypeParameterDocumentationMustHaveText" ruleCheckId="SA1622">
        <context>The documentation text within the typeparam tag for the '&lt;typeparam name="T" /&gt;' parameter must not be empty.</context>
        <line>89</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>103</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Move must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>93</line>
        <index>3298</index>
        <endIndex>3301</endIndex>
        <startLine>93</startLine>
        <startColumn>24</startColumn>
        <endLine>93</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Attack must begin with the 'this.', 'base.', 'object.' or 'MovingObject.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>103</line>
        <index>3618</index>
        <endIndex>3623</endIndex>
        <startLine>103</startLine>
        <startColumn>47</startColumn>
        <endLine>103</endLine>
        <endColumn>52</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>106</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="DamageAnimation.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 03:46:07.986</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>8</line>
        <index>157</index>
        <endIndex>185</endIndex>
        <startLine>8</startLine>
        <startColumn>5</startColumn>
        <endLine>8</endLine>
        <endColumn>33</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>11</line>
        <index>227</index>
        <endIndex>275</endIndex>
        <startLine>11</startLine>
        <startColumn>5</startColumn>
        <endLine>11</endLine>
        <endColumn>53</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>14</line>
        <index>330</index>
        <endIndex>453</endIndex>
        <startLine>14</startLine>
        <startColumn>5</startColumn>
        <endLine>14</endLine>
        <endColumn>128</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: animationTime.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: spriteRenderers.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParametersMustBeOnSameLineOrSeparateLines" ruleCheckId="SA1117">
        <context>All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="SplitParametersMustStartOnLineAfterDeclaration" ruleCheckId="SA1116">
        <context>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lerpAccumulator must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>23</line>
        <index>616</index>
        <endIndex>630</endIndex>
        <startLine>23</startLine>
        <startColumn>13</startColumn>
        <endLine>23</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to spriteRenderers must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>744</index>
        <endIndex>758</endIndex>
        <startLine>26</startLine>
        <startColumn>17</startColumn>
        <endLine>26</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to spriteRenderers must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>782</index>
        <endIndex>796</endIndex>
        <startLine>26</startLine>
        <startColumn>55</startColumn>
        <endLine>26</endLine>
        <endColumn>69</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to originalColors must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>808</index>
        <endIndex>821</endIndex>
        <startLine>26</startLine>
        <startColumn>81</startColumn>
        <endLine>26</endLine>
        <endColumn>94</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lerpAccumulator must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>27</line>
        <index>848</index>
        <endIndex>862</endIndex>
        <startLine>27</startLine>
        <startColumn>21</startColumn>
        <endLine>27</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animationTime must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>27</line>
        <index>866</index>
        <endIndex>878</endIndex>
        <startLine>27</startLine>
        <startColumn>39</startColumn>
        <endLine>27</endLine>
        <endColumn>51</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animating must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>30</line>
        <index>990</index>
        <endIndex>998</endIndex>
        <startLine>30</startLine>
        <startColumn>21</startColumn>
        <endLine>30</endLine>
        <endColumn>29</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to spriteRenderers must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>28</line>
        <index>903</index>
        <endIndex>917</endIndex>
        <startLine>28</startLine>
        <startColumn>21</startColumn>
        <endLine>28</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to originalColors must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>28</line>
        <index>931</index>
        <endIndex>944</endIndex>
        <startLine>28</startLine>
        <startColumn>49</startColumn>
        <endLine>28</endLine>
        <endColumn>62</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to originalColors must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>24</line>
        <index>684</index>
        <endIndex>697</endIndex>
        <startLine>24</startLine>
        <startColumn>33</startColumn>
        <endLine>24</endLine>
        <endColumn>46</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animating must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>21</line>
        <index>581</index>
        <endIndex>589</endIndex>
        <startLine>21</startLine>
        <startColumn>13</startColumn>
        <endLine>21</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SetOriginalColors must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>41</line>
        <index>1227</index>
        <endIndex>1243</endIndex>
        <startLine>41</startLine>
        <startColumn>9</startColumn>
        <endLine>41</endLine>
        <endColumn>25</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lerpAccumulator must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>44</line>
        <index>1297</index>
        <endIndex>1311</endIndex>
        <startLine>44</startLine>
        <startColumn>13</startColumn>
        <endLine>44</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animating must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>45</line>
        <index>1332</index>
        <endIndex>1340</endIndex>
        <startLine>45</startLine>
        <startColumn>13</startColumn>
        <endLine>45</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to originalColors must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1443</index>
        <endIndex>1456</endIndex>
        <startLine>48</startLine>
        <startColumn>17</startColumn>
        <endLine>48</endLine>
        <endColumn>30</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to spriteRenderers must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1463</index>
        <endIndex>1477</endIndex>
        <startLine>48</startLine>
        <startColumn>37</startColumn>
        <endLine>48</endLine>
        <endColumn>51</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to spriteRenderers must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>49</line>
        <index>1506</index>
        <endIndex>1520</endIndex>
        <startLine>49</startLine>
        <startColumn>17</startColumn>
        <endLine>49</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to originalColors must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>46</line>
        <index>1383</index>
        <endIndex>1396</endIndex>
        <startLine>46</startLine>
        <startColumn>33</startColumn>
        <endLine>46</endLine>
        <endColumn>46</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animating must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>42</line>
        <index>1262</index>
        <endIndex>1270</endIndex>
        <startLine>42</startLine>
        <startColumn>14</startColumn>
        <endLine>42</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to originalColors must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>59</line>
        <index>1741</index>
        <endIndex>1754</endIndex>
        <startLine>59</startLine>
        <startColumn>9</startColumn>
        <endLine>59</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to spriteRenderers must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>59</line>
        <index>1768</index>
        <endIndex>1782</endIndex>
        <startLine>59</startLine>
        <startColumn>36</startColumn>
        <endLine>59</endLine>
        <endColumn>50</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to originalColors must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>62</line>
        <index>1874</index>
        <endIndex>1887</endIndex>
        <startLine>62</startLine>
        <startColumn>13</startColumn>
        <endLine>62</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to spriteRenderers must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>62</line>
        <index>1894</index>
        <endIndex>1908</endIndex>
        <startLine>62</startLine>
        <startColumn>33</startColumn>
        <endLine>62</endLine>
        <endColumn>47</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to originalColors must begin with the 'this.', 'base.', 'object.' or 'DamageAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>60</line>
        <index>1822</index>
        <endIndex>1835</endIndex>
        <startLine>60</startLine>
        <startColumn>29</startColumn>
        <endLine>60</endLine>
        <endColumn>42</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="EnemyClick.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 03:45:13.814</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerMovement must begin with the 'this.', 'base.', 'object.' or 'EnemyClick.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>13</line>
        <index>304</index>
        <endIndex>317</endIndex>
        <startLine>13</startLine>
        <startColumn>9</startColumn>
        <endLine>13</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerMovement must begin with the 'this.', 'base.', 'object.' or 'EnemyClick.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>18</line>
        <index>464</index>
        <endIndex>477</endIndex>
        <startLine>18</startLine>
        <startColumn>9</startColumn>
        <endLine>18</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to transform must begin with the 'this.', 'base.', 'object.' or 'EnemyClick.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>18</line>
        <index>503</index>
        <endIndex>511</endIndex>
        <startLine>18</startLine>
        <startColumn>48</startColumn>
        <endLine>18</endLine>
        <endColumn>56</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="MouseClicker.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 03:55:41.429</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the summary tag contains incorrectly spelled words: 'automoving'</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: playerMovement.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>35</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>40</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="SplitParametersMustStartOnLineAfterDeclaration" ruleCheckId="SA1116">
        <context>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to MousePositionToWorldPosition must begin with the 'this.', 'base.', 'object.' or 'MouseClicker.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>15</line>
        <index>421</index>
        <endIndex>448</endIndex>
        <startLine>15</startLine>
        <startColumn>37</startColumn>
        <endLine>15</endLine>
        <endColumn>64</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerMovement must begin with the 'this.', 'base.', 'object.' or 'MouseClicker.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>19</line>
        <index>635</index>
        <endIndex>648</endIndex>
        <startLine>19</startLine>
        <startColumn>13</startColumn>
        <endLine>19</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pointerIsDown must begin with the 'this.', 'base.', 'object.' or 'MouseClicker.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>17</line>
        <index>596</index>
        <endIndex>608</endIndex>
        <startLine>17</startLine>
        <startColumn>13</startColumn>
        <endLine>17</endLine>
        <endColumn>25</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParametersMustBeDocumented" ruleCheckId="SA1611">
        <context>The documentation header must contain param tags matching the element's parameter list.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueMustBeDocumented" ruleCheckId="SA1615">
        <context>The documentation header must contain a returns tag since the element has a return value.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="ArithmeticExpressionsMustDeclarePrecedence" ruleCheckId="SA1407">
        <context>Insert parenthesis within the arithmetic expression to declare the operator precedence.</context>
        <line>32</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>32</line>
        <index>1331</index>
        <endIndex>1331</endIndex>
        <startLine>32</startLine>
        <startColumn>70</startColumn>
        <endLine>32</endLine>
        <endColumn>70</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>35</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pointerIsDown must begin with the 'this.', 'base.', 'object.' or 'MouseClicker.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>37</line>
        <index>1448</index>
        <endIndex>1460</endIndex>
        <startLine>37</startLine>
        <startColumn>9</startColumn>
        <endLine>37</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>40</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pointerIsDown must begin with the 'this.', 'base.', 'object.' or 'MouseClicker.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>42</line>
        <index>1552</index>
        <endIndex>1564</endIndex>
        <startLine>42</startLine>
        <startColumn>9</startColumn>
        <endLine>42</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="PlayerAnimation.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 04:06:08.188</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: animators.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: leftSword.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: rightSword.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: armor.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: helmet.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>24</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>24</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParametersMustBeDocumented" ruleCheckId="SA1611">
        <context>The documentation header must contain param tags matching the element's parameter list.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moveDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>31</line>
        <index>894</index>
        <endIndex>906</endIndex>
        <startLine>31</startLine>
        <startColumn>9</startColumn>
        <endLine>31</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="dir" /&gt;' parameter must not be empty.</context>
        <line>38</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moveDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>41</line>
        <index>1193</index>
        <endIndex>1205</endIndex>
        <startLine>41</startLine>
        <startColumn>9</startColumn>
        <endLine>41</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to idleDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>42</line>
        <index>1232</index>
        <endIndex>1244</endIndex>
        <startLine>42</startLine>
        <startColumn>9</startColumn>
        <endLine>42</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Flip must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>49</line>
        <index>1425</index>
        <endIndex>1428</endIndex>
        <startLine>49</startLine>
        <startColumn>17</startColumn>
        <endLine>49</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to facingRight must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>47</line>
        <index>1380</index>
        <endIndex>1390</endIndex>
        <startLine>47</startLine>
        <startColumn>31</startColumn>
        <endLine>47</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Flip must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>53</line>
        <index>1528</index>
        <endIndex>1531</endIndex>
        <startLine>53</startLine>
        <startColumn>17</startColumn>
        <endLine>53</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to facingRight must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>51</line>
        <index>1483</index>
        <endIndex>1493</endIndex>
        <startLine>51</startLine>
        <startColumn>35</startColumn>
        <endLine>51</endLine>
        <endColumn>45</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attackDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>57</line>
        <index>1573</index>
        <endIndex>1587</endIndex>
        <startLine>57</startLine>
        <startColumn>9</startColumn>
        <endLine>57</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>65</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>66</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>67</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SetTriggers must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>65</line>
        <index>1782</index>
        <endIndex>1792</endIndex>
        <startLine>65</startLine>
        <startColumn>37</startColumn>
        <endLine>65</endLine>
        <endColumn>47</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attackDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>65</line>
        <index>1758</index>
        <endIndex>1772</endIndex>
        <startLine>65</startLine>
        <startColumn>13</startColumn>
        <endLine>65</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SetTriggers must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>66</line>
        <index>1845</index>
        <endIndex>1855</endIndex>
        <startLine>66</startLine>
        <startColumn>36</startColumn>
        <endLine>66</endLine>
        <endColumn>46</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attackDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>66</line>
        <index>1822</index>
        <endIndex>1836</endIndex>
        <startLine>66</startLine>
        <startColumn>13</startColumn>
        <endLine>66</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SetTriggers must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>67</line>
        <index>1909</index>
        <endIndex>1919</endIndex>
        <startLine>67</startLine>
        <startColumn>36</startColumn>
        <endLine>67</endLine>
        <endColumn>46</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attackDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>67</line>
        <index>1886</index>
        <endIndex>1900</endIndex>
        <startLine>67</startLine>
        <startColumn>13</startColumn>
        <endLine>67</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="dir" /&gt;' parameter must not be empty.</context>
        <line>74</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to idleDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>76</line>
        <index>2142</index>
        <endIndex>2154</endIndex>
        <startLine>76</startLine>
        <startColumn>9</startColumn>
        <endLine>76</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>80</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>80</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>123</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SetFloats must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>84</line>
        <index>2327</index>
        <endIndex>2335</endIndex>
        <startLine>84</startLine>
        <startColumn>13</startColumn>
        <endLine>84</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moveDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>84</line>
        <index>2365</index>
        <endIndex>2377</endIndex>
        <startLine>84</startLine>
        <startColumn>51</startColumn>
        <endLine>84</endLine>
        <endColumn>63</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SetFloats must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>85</line>
        <index>2397</index>
        <endIndex>2405</endIndex>
        <startLine>85</startLine>
        <startColumn>13</startColumn>
        <endLine>85</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moveDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>85</line>
        <index>2423</index>
        <endIndex>2435</endIndex>
        <startLine>85</startLine>
        <startColumn>39</startColumn>
        <endLine>85</endLine>
        <endColumn>51</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SetFloats must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>86</line>
        <index>2454</index>
        <endIndex>2462</endIndex>
        <startLine>86</startLine>
        <startColumn>13</startColumn>
        <endLine>86</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to idleDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>86</line>
        <index>2492</index>
        <endIndex>2504</endIndex>
        <startLine>86</startLine>
        <startColumn>51</startColumn>
        <endLine>86</endLine>
        <endColumn>63</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SetFloats must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>87</line>
        <index>2524</index>
        <endIndex>2532</endIndex>
        <startLine>87</startLine>
        <startColumn>13</startColumn>
        <endLine>87</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to idleDirection must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>87</line>
        <index>2550</index>
        <endIndex>2562</endIndex>
        <startLine>87</startLine>
        <startColumn>39</startColumn>
        <endLine>87</endLine>
        <endColumn>51</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>94</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to facingRight must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>96</line>
        <index>2711</index>
        <endIndex>2721</endIndex>
        <startLine>96</startLine>
        <startColumn>9</startColumn>
        <endLine>96</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to facingRight must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>96</line>
        <index>2726</index>
        <endIndex>2736</endIndex>
        <startLine>96</startLine>
        <startColumn>24</startColumn>
        <endLine>96</endLine>
        <endColumn>34</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>102</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>102</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animators must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>104</line>
        <index>2942</index>
        <endIndex>2950</endIndex>
        <startLine>104</startLine>
        <startColumn>39</startColumn>
        <endLine>104</endLine>
        <endColumn>47</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>110</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>110</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animators must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>112</line>
        <index>3120</index>
        <endIndex>3128</endIndex>
        <startLine>112</startLine>
        <startColumn>39</startColumn>
        <endLine>112</endLine>
        <endColumn>47</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="equipmentType" /&gt;' parameter must not be empty.</context>
        <line>123</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="color" /&gt;' parameter must not be empty.</context>
        <line>123</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to leftSword must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>131</line>
        <index>3666</index>
        <endIndex>3674</endIndex>
        <startLine>131</startLine>
        <startColumn>21</startColumn>
        <endLine>131</endLine>
        <endColumn>29</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to rightSword must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>134</line>
        <index>3784</index>
        <endIndex>3793</endIndex>
        <startLine>134</startLine>
        <startColumn>21</startColumn>
        <endLine>134</endLine>
        <endColumn>30</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to armor must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>137</line>
        <index>3898</index>
        <endIndex>3902</endIndex>
        <startLine>137</startLine>
        <startColumn>21</startColumn>
        <endLine>137</endLine>
        <endColumn>25</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to helmet must begin with the 'this.', 'base.', 'object.' or 'PlayerAnimation.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>140</line>
        <index>4008</index>
        <endIndex>4013</endIndex>
        <startLine>140</startLine>
        <startColumn>21</startColumn>
        <endLine>140</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="PlayerMovement.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 04:13:01.757</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>8</line>
        <index>168</index>
        <endIndex>195</endIndex>
        <startLine>8</startLine>
        <startColumn>5</startColumn>
        <endLine>8</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: range.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: pathfindingLayer.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: enemyLayer.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: chestLayer.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All protected methods must be placed after all public methods.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All protected methods must be placed after all public methods.</context>
        <line>44</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All protected methods must be placed after all public methods.</context>
        <line>51</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to stats must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>680</index>
        <endIndex>684</endIndex>
        <startLine>26</startLine>
        <startColumn>9</startColumn>
        <endLine>26</endLine>
        <endColumn>13</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;PlayerStats&gt; must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>26</line>
        <index>688</index>
        <endIndex>712</endIndex>
        <startLine>26</startLine>
        <startColumn>17</startColumn>
        <endLine>26</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animatorHandler must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>27</line>
        <index>726</index>
        <endIndex>740</endIndex>
        <startLine>27</startLine>
        <startColumn>9</startColumn>
        <endLine>27</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;PlayerAnimation&gt; must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>27</line>
        <index>744</index>
        <endIndex>772</endIndex>
        <startLine>27</startLine>
        <startColumn>27</startColumn>
        <endLine>27</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the summary tag contains incorrectly spelled words: 'Automove'</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="target" /&gt;' parameter must not be empty.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automoveTarget must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>987</index>
        <endIndex>1000</endIndex>
        <startLine>36</startLine>
        <startColumn>9</startColumn>
        <endLine>36</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automoving must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>37</line>
        <index>1021</index>
        <endIndex>1030</endIndex>
        <startLine>37</startLine>
        <startColumn>9</startColumn>
        <endLine>37</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the summary tag contains incorrectly spelled words: 'Automove'</context>
        <line>44</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="target" /&gt;' parameter must not be empty.</context>
        <line>44</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automoveTarget must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>46</line>
        <index>1247</index>
        <endIndex>1260</endIndex>
        <startLine>46</startLine>
        <startColumn>9</startColumn>
        <endLine>46</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automovePosition must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>47</line>
        <index>1279</index>
        <endIndex>1294</endIndex>
        <startLine>47</startLine>
        <startColumn>9</startColumn>
        <endLine>47</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automoving must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1315</index>
        <endIndex>1324</endIndex>
        <startLine>48</startLine>
        <startColumn>9</startColumn>
        <endLine>48</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>51</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automoving must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>53</line>
        <index>1391</index>
        <endIndex>1400</endIndex>
        <startLine>53</startLine>
        <startColumn>9</startColumn>
        <endLine>53</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automoveTarget must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>54</line>
        <index>1420</index>
        <endIndex>1433</endIndex>
        <startLine>54</startLine>
        <startColumn>9</startColumn>
        <endLine>54</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>57</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>59</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>57</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all protected methods.</context>
        <line>134</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all protected methods.</context>
        <line>174</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to moving must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>59</line>
        <index>1491</index>
        <endIndex>1496</endIndex>
        <startLine>59</startLine>
        <startColumn>13</startColumn>
        <endLine>59</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to hitting must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>59</line>
        <index>1501</index>
        <endIndex>1507</endIndex>
        <startLine>59</startLine>
        <startColumn>23</startColumn>
        <endLine>59</endLine>
        <endColumn>29</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to InputMove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>60</line>
        <index>1550</index>
        <endIndex>1558</endIndex>
        <startLine>60</startLine>
        <startColumn>9</startColumn>
        <endLine>60</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Automove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>63</line>
        <index>1612</index>
        <endIndex>1619</endIndex>
        <startLine>63</startLine>
        <startColumn>13</startColumn>
        <endLine>63</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automoving must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>61</line>
        <index>1576</index>
        <endIndex>1585</endIndex>
        <startLine>61</startLine>
        <startColumn>13</startColumn>
        <endLine>61</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>75</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animatorHandler must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>78</line>
        <index>2078</index>
        <endIndex>2092</endIndex>
        <startLine>78</startLine>
        <startColumn>9</startColumn>
        <endLine>78</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to StopAutomove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>86</line>
        <index>2474</index>
        <endIndex>2485</endIndex>
        <startLine>86</startLine>
        <startColumn>17</startColumn>
        <endLine>86</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AttemptMove&lt;EnemyStats&gt; must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>87</line>
        <index>2507</index>
        <endIndex>2529</endIndex>
        <startLine>87</startLine>
        <startColumn>17</startColumn>
        <endLine>87</endLine>
        <endColumn>39</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>72</line>
        <index>1814</index>
        <endIndex>1814</endIndex>
        <startLine>72</startLine>
        <startColumn>48</startColumn>
        <endLine>72</endLine>
        <endColumn>48</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>72</line>
        <index>1852</index>
        <endIndex>1852</endIndex>
        <startLine>72</startLine>
        <startColumn>86</startColumn>
        <endLine>72</endLine>
        <endColumn>86</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>84</line>
        <index>2411</index>
        <endIndex>2411</endIndex>
        <startLine>84</startLine>
        <startColumn>73</startColumn>
        <endLine>84</endLine>
        <endColumn>73</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the summary tag contains incorrectly spelled words: 'automovement'</context>
        <line>95</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParametersMustBeOnSameLineOrSeparateLines" ruleCheckId="SA1117">
        <context>All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</context>
        <line>102</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="SplitParametersMustStartOnLineAfterDeclaration" ruleCheckId="SA1116">
        <context>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</context>
        <line>102</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>103</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParametersMustBeOnSameLineOrSeparateLines" ruleCheckId="SA1117">
        <context>All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</context>
        <line>108</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="SplitParametersMustStartOnLineAfterDeclaration" ruleCheckId="SA1116">
        <context>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</context>
        <line>108</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>109</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automovePosition must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>101</line>
        <index>2880</index>
        <endIndex>2895</endIndex>
        <startLine>101</startLine>
        <startColumn>13</startColumn>
        <endLine>101</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automoveTarget must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>101</line>
        <index>2921</index>
        <endIndex>2934</endIndex>
        <startLine>101</startLine>
        <startColumn>54</startColumn>
        <endLine>101</endLine>
        <endColumn>67</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automovePosition must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>103</line>
        <index>3079</index>
        <endIndex>3094</endIndex>
        <startLine>103</startLine>
        <startColumn>39</startColumn>
        <endLine>103</endLine>
        <endColumn>54</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pathfindingLayer must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>103</line>
        <index>3098</index>
        <endIndex>3113</endIndex>
        <startLine>103</startLine>
        <startColumn>58</startColumn>
        <endLine>103</endLine>
        <endColumn>73</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to chestLayer must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>103</line>
        <index>3117</index>
        <endIndex>3126</endIndex>
        <startLine>103</startLine>
        <startColumn>77</startColumn>
        <endLine>103</endLine>
        <endColumn>86</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to range must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>103</line>
        <index>3129</index>
        <endIndex>3133</endIndex>
        <startLine>103</startLine>
        <startColumn>89</startColumn>
        <endLine>103</endLine>
        <endColumn>93</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to altMove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>103</line>
        <index>3136</index>
        <endIndex>3142</endIndex>
        <startLine>103</startLine>
        <startColumn>96</startColumn>
        <endLine>103</endLine>
        <endColumn>102</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automoveTarget must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>98</line>
        <index>2784</index>
        <endIndex>2797</endIndex>
        <startLine>98</startLine>
        <startColumn>13</startColumn>
        <endLine>98</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automovePosition must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>109</line>
        <index>3357</index>
        <endIndex>3372</endIndex>
        <startLine>109</startLine>
        <startColumn>39</startColumn>
        <endLine>109</endLine>
        <endColumn>54</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pathfindingLayer must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>109</line>
        <index>3376</index>
        <endIndex>3391</endIndex>
        <startLine>109</startLine>
        <startColumn>58</startColumn>
        <endLine>109</endLine>
        <endColumn>73</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to enemyLayer must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>109</line>
        <index>3395</index>
        <endIndex>3404</endIndex>
        <startLine>109</startLine>
        <startColumn>77</startColumn>
        <endLine>109</endLine>
        <endColumn>86</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to range must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>109</line>
        <index>3407</index>
        <endIndex>3411</endIndex>
        <startLine>109</startLine>
        <startColumn>89</startColumn>
        <endLine>109</endLine>
        <endColumn>93</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to altMove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>109</line>
        <index>3414</index>
        <endIndex>3420</endIndex>
        <startLine>109</startLine>
        <startColumn>96</startColumn>
        <endLine>109</endLine>
        <endColumn>102</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to StopAutomove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>115</line>
        <index>3633</index>
        <endIndex>3644</endIndex>
        <startLine>115</startLine>
        <startColumn>13</startColumn>
        <endLine>115</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to automovePosition must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>113</line>
        <index>3545</index>
        <endIndex>3560</endIndex>
        <startLine>113</startLine>
        <startColumn>35</startColumn>
        <endLine>113</endLine>
        <endColumn>50</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animatorHandler must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>123</line>
        <index>3949</index>
        <endIndex>3963</endIndex>
        <startLine>123</startLine>
        <startColumn>13</startColumn>
        <endLine>123</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AttemptMove&lt;EnemyStats&gt; must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>124</line>
        <index>4017</index>
        <endIndex>4039</endIndex>
        <startLine>124</startLine>
        <startColumn>13</startColumn>
        <endLine>124</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to altMove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>125</line>
        <index>4131</index>
        <endIndex>4137</endIndex>
        <startLine>125</startLine>
        <startColumn>13</startColumn>
        <endLine>125</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to altMove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>125</line>
        <index>4142</index>
        <endIndex>4148</endIndex>
        <startLine>125</startLine>
        <startColumn>24</startColumn>
        <endLine>125</endLine>
        <endColumn>30</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="dir" /&gt;' parameter must not be empty.</context>
        <line>134</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="GenericTypeParameterDocumentationMustHaveText" ruleCheckId="SA1622">
        <context>The documentation text within the typeparam tag for the '&lt;typeparam name="T" /&gt;' parameter must not be empty.</context>
        <line>134</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animatorHandler must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>142</line>
        <index>4684</index>
        <endIndex>4698</endIndex>
        <startLine>142</startLine>
        <startColumn>13</startColumn>
        <endLine>142</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to StopAutomove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>153</line>
        <index>5067</index>
        <endIndex>5078</endIndex>
        <startLine>153</startLine>
        <startColumn>13</startColumn>
        <endLine>153</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Attack must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>154</line>
        <index>5096</index>
        <endIndex>5101</endIndex>
        <startLine>154</startLine>
        <startColumn>13</startColumn>
        <endLine>154</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to StopAutomove must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>162</line>
        <index>5370</index>
        <endIndex>5381</endIndex>
        <startLine>162</startLine>
        <startColumn>17</startColumn>
        <endLine>162</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animatorHandler must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>165</line>
        <index>5416</index>
        <endIndex>5430</endIndex>
        <startLine>165</startLine>
        <startColumn>13</startColumn>
        <endLine>165</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="component" /&gt;' parameter must not be empty.</context>
        <line>174</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="GenericTypeParameterDocumentationMustHaveText" ruleCheckId="SA1622">
        <context>The documentation text within the typeparam tag for the '&lt;typeparam name="T" /&gt;' parameter must not be empty.</context>
        <line>174</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>176</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to hitting must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>176</line>
        <index>5714</index>
        <endIndex>5720</endIndex>
        <startLine>176</startLine>
        <startColumn>13</startColumn>
        <endLine>176</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to hitting must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>177</line>
        <index>5740</index>
        <endIndex>5746</endIndex>
        <startLine>177</startLine>
        <startColumn>9</startColumn>
        <endLine>177</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Invoke must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>178</line>
        <index>5765</index>
        <endIndex>5770</endIndex>
        <startLine>178</startLine>
        <startColumn>9</startColumn>
        <endLine>178</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to stats must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>178</line>
        <index>5788</index>
        <endIndex>5792</endIndex>
        <startLine>178</startLine>
        <startColumn>32</startColumn>
        <endLine>178</endLine>
        <endColumn>36</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animatorHandler must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>179</line>
        <index>5814</index>
        <endIndex>5828</endIndex>
        <startLine>179</startLine>
        <startColumn>9</startColumn>
        <endLine>179</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to stats must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>181</line>
        <index>5946</index>
        <endIndex>5950</endIndex>
        <startLine>181</startLine>
        <startColumn>43</startColumn>
        <endLine>181</endLine>
        <endColumn>47</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to stats must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>181</line>
        <index>5963</index>
        <endIndex>5967</endIndex>
        <startLine>181</startLine>
        <startColumn>60</startColumn>
        <endLine>181</endLine>
        <endColumn>64</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>187</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to hitting must begin with the 'this.', 'base.', 'object.' or 'PlayerMovement.' or 'MovingObject.' prefix to indicate the intended method call. </context>
        <line>189</line>
        <index>6136</index>
        <endIndex>6142</endIndex>
        <startLine>189</startLine>
        <startColumn>9</startColumn>
        <endLine>189</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="PlayerStats.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 07:31:32.543</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>32</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>35</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: maxHealth.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: minAttack.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: maxAttack.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>32</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>32</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: maxFocus.</context>
        <line>32</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>35</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>35</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: hitSpeed.</context>
        <line>35</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>36</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>36</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>37</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>37</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>38</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>38</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>39</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>39</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>41</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>41</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>52</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>61</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>75</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>87</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>105</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>115</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animator must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>43</line>
        <index>1395</index>
        <endIndex>1402</endIndex>
        <startLine>43</startLine>
        <startColumn>9</startColumn>
        <endLine>43</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;Animator&gt; must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>43</line>
        <index>1406</index>
        <endIndex>1427</endIndex>
        <startLine>43</startLine>
        <startColumn>20</startColumn>
        <endLine>43</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to damageCounter must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>44</line>
        <index>1441</index>
        <endIndex>1453</endIndex>
        <startLine>44</startLine>
        <startColumn>9</startColumn>
        <endLine>44</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to transform must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>44</line>
        <index>1509</index>
        <endIndex>1517</endIndex>
        <startLine>44</startLine>
        <startColumn>77</startColumn>
        <endLine>44</endLine>
        <endColumn>85</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to damageText must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>45</line>
        <index>1530</index>
        <endIndex>1539</endIndex>
        <startLine>45</startLine>
        <startColumn>9</startColumn>
        <endLine>45</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to transform must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>45</line>
        <index>1591</index>
        <endIndex>1599</endIndex>
        <startLine>45</startLine>
        <startColumn>70</startColumn>
        <endLine>45</endLine>
        <endColumn>78</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>46</line>
        <index>1612</index>
        <endIndex>1617</endIndex>
        <startLine>46</startLine>
        <startColumn>9</startColumn>
        <endLine>46</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxHealth must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>46</line>
        <index>1621</index>
        <endIndex>1629</endIndex>
        <startLine>46</startLine>
        <startColumn>18</startColumn>
        <endLine>46</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to UpdateEquipStats must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>47</line>
        <index>1641</index>
        <endIndex>1656</endIndex>
        <startLine>47</startLine>
        <startColumn>9</startColumn>
        <endLine>47</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to level must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1716</index>
        <endIndex>1720</endIndex>
        <startLine>48</startLine>
        <startColumn>55</startColumn>
        <endLine>48</endLine>
        <endColumn>59</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to experience must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1723</index>
        <endIndex>1732</endIndex>
        <startLine>48</startLine>
        <startColumn>62</startColumn>
        <endLine>48</endLine>
        <endColumn>71</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1735</index>
        <endIndex>1740</endIndex>
        <startLine>48</startLine>
        <startColumn>74</startColumn>
        <endLine>48</endLine>
        <endColumn>79</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to focus must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1743</index>
        <endIndex>1747</endIndex>
        <startLine>48</startLine>
        <startColumn>82</startColumn>
        <endLine>48</endLine>
        <endColumn>86</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to defence must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1750</index>
        <endIndex>1756</endIndex>
        <startLine>48</startLine>
        <startColumn>89</startColumn>
        <endLine>48</endLine>
        <endColumn>95</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to minAttack must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1759</index>
        <endIndex>1767</endIndex>
        <startLine>48</startLine>
        <startColumn>98</startColumn>
        <endLine>48</endLine>
        <endColumn>106</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxAttack must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>48</line>
        <index>1770</index>
        <endIndex>1778</endIndex>
        <startLine>48</startLine>
        <startColumn>109</startColumn>
        <endLine>48</endLine>
        <endColumn>117</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerAnimation must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>49</line>
        <index>1791</index>
        <endIndex>1805</endIndex>
        <startLine>49</startLine>
        <startColumn>9</startColumn>
        <endLine>49</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetComponent&lt;PlayerAnimation&gt; must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>49</line>
        <index>1809</index>
        <endIndex>1837</endIndex>
        <startLine>49</startLine>
        <startColumn>27</startColumn>
        <endLine>49</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>52</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to level must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>54</line>
        <index>1901</index>
        <endIndex>1905</endIndex>
        <startLine>54</startLine>
        <startColumn>16</startColumn>
        <endLine>54</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="damage" /&gt;' parameter must not be empty.</context>
        <line>61</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to defence must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>63</line>
        <index>2165</index>
        <endIndex>2171</endIndex>
        <startLine>63</startLine>
        <startColumn>39</startColumn>
        <endLine>63</endLine>
        <endColumn>45</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>64</line>
        <index>2195</index>
        <endIndex>2200</endIndex>
        <startLine>64</startLine>
        <startColumn>9</startColumn>
        <endLine>64</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>64</line>
        <index>2216</index>
        <endIndex>2221</endIndex>
        <startLine>64</startLine>
        <startColumn>30</startColumn>
        <endLine>64</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>64</line>
        <index>2236</index>
        <endIndex>2241</endIndex>
        <startLine>64</startLine>
        <startColumn>50</startColumn>
        <endLine>64</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to damageCounter must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>65</line>
        <index>2254</index>
        <endIndex>2266</endIndex>
        <startLine>65</startLine>
        <startColumn>9</startColumn>
        <endLine>65</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to animator must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>66</line>
        <index>2299</index>
        <endIndex>2306</endIndex>
        <startLine>66</startLine>
        <startColumn>9</startColumn>
        <endLine>66</endLine>
        <endColumn>16</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to damageText must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>67</line>
        <index>2339</index>
        <endIndex>2348</endIndex>
        <startLine>67</startLine>
        <startColumn>9</startColumn>
        <endLine>67</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>68</line>
        <index>2425</index>
        <endIndex>2430</endIndex>
        <startLine>68</startLine>
        <startColumn>55</startColumn>
        <endLine>68</endLine>
        <endColumn>60</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxHealth must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>68</line>
        <index>2442</index>
        <endIndex>2450</endIndex>
        <startLine>68</startLine>
        <startColumn>72</startColumn>
        <endLine>68</endLine>
        <endColumn>80</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="UseStringEmptyForEmptyStrings" ruleCheckId="SA1122">
        <context>Use string.Empty rather than "".</context>
        <line>67</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>68</line>
        <index>2441</index>
        <endIndex>2441</endIndex>
        <startLine>68</startLine>
        <startColumn>71</startColumn>
        <endLine>68</endLine>
        <endColumn>71</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="amount" /&gt;' parameter must not be empty.</context>
        <line>75</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>77</line>
        <index>2637</index>
        <endIndex>2642</endIndex>
        <startLine>77</startLine>
        <startColumn>9</startColumn>
        <endLine>77</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>77</line>
        <index>2658</index>
        <endIndex>2663</endIndex>
        <startLine>77</startLine>
        <startColumn>30</startColumn>
        <endLine>77</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxHealth must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>77</line>
        <index>2678</index>
        <endIndex>2686</endIndex>
        <startLine>77</startLine>
        <startColumn>50</startColumn>
        <endLine>77</endLine>
        <endColumn>58</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to health must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>78</line>
        <index>2745</index>
        <endIndex>2750</endIndex>
        <startLine>78</startLine>
        <startColumn>55</startColumn>
        <endLine>78</endLine>
        <endColumn>60</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxHealth must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>78</line>
        <index>2762</index>
        <endIndex>2770</endIndex>
        <startLine>78</startLine>
        <startColumn>72</startColumn>
        <endLine>78</endLine>
        <endColumn>80</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>78</line>
        <index>2761</index>
        <endIndex>2761</endIndex>
        <startLine>78</startLine>
        <startColumn>71</startColumn>
        <endLine>78</endLine>
        <endColumn>71</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="inst" /&gt;' parameter must not be empty.</context>
        <line>87</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="slot" /&gt;' parameter must not be empty.</context>
        <line>87</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>87</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to UpdateEquipStats must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>93</line>
        <index>3205</index>
        <endIndex>3220</endIndex>
        <startLine>93</startLine>
        <startColumn>13</startColumn>
        <endLine>93</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerAnimation must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>94</line>
        <index>3238</index>
        <endIndex>3252</endIndex>
        <startLine>94</startLine>
        <startColumn>13</startColumn>
        <endLine>94</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to level must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>90</line>
        <index>3116</index>
        <endIndex>3120</endIndex>
        <startLine>90</startLine>
        <startColumn>13</startColumn>
        <endLine>90</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="inst" /&gt;' parameter must not be empty.</context>
        <line>105</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to UpdateEquipStats must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>109</line>
        <index>3688</index>
        <endIndex>3703</endIndex>
        <startLine>109</startLine>
        <startColumn>9</startColumn>
        <endLine>109</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParametersMustBeOnSameLineOrSeparateLines" ruleCheckId="SA1117">
        <context>All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</context>
        <line>133</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="SplitParametersMustStartOnLineAfterDeclaration" ruleCheckId="SA1116">
        <context>If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</context>
        <line>133</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>133</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to defence must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>117</line>
        <index>3904</index>
        <endIndex>3910</endIndex>
        <startLine>117</startLine>
        <startColumn>9</startColumn>
        <endLine>117</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to minAttack must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>118</line>
        <index>3926</index>
        <endIndex>3934</endIndex>
        <startLine>118</startLine>
        <startColumn>9</startColumn>
        <endLine>118</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxAttack must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>119</line>
        <index>3950</index>
        <endIndex>3958</endIndex>
        <startLine>119</startLine>
        <startColumn>9</startColumn>
        <endLine>119</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to defence must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>127</line>
        <index>4243</index>
        <endIndex>4249</endIndex>
        <startLine>127</startLine>
        <startColumn>17</startColumn>
        <endLine>127</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to minAttack must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>128</line>
        <index>4293</index>
        <endIndex>4301</endIndex>
        <startLine>128</startLine>
        <startColumn>17</startColumn>
        <endLine>128</endLine>
        <endColumn>25</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxAttack must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>129</line>
        <index>4344</index>
        <endIndex>4352</endIndex>
        <startLine>129</startLine>
        <startColumn>17</startColumn>
        <endLine>129</endLine>
        <endColumn>25</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to level must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>133</line>
        <index>4464</index>
        <endIndex>4468</endIndex>
        <startLine>133</startLine>
        <startColumn>55</startColumn>
        <endLine>133</endLine>
        <endColumn>59</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to experience must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>133</line>
        <index>4471</index>
        <endIndex>4480</endIndex>
        <startLine>133</startLine>
        <startColumn>62</startColumn>
        <endLine>133</endLine>
        <endColumn>71</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxHealth must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>133</line>
        <index>4483</index>
        <endIndex>4491</endIndex>
        <startLine>133</startLine>
        <startColumn>74</startColumn>
        <endLine>133</endLine>
        <endColumn>82</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxFocus must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>133</line>
        <index>4494</index>
        <endIndex>4501</endIndex>
        <startLine>133</startLine>
        <startColumn>85</startColumn>
        <endLine>133</endLine>
        <endColumn>92</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to defence must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>133</line>
        <index>4504</index>
        <endIndex>4510</endIndex>
        <startLine>133</startLine>
        <startColumn>95</startColumn>
        <endLine>133</endLine>
        <endColumn>101</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to minAttack must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>133</line>
        <index>4513</index>
        <endIndex>4521</endIndex>
        <startLine>133</startLine>
        <startColumn>104</startColumn>
        <endLine>133</endLine>
        <endColumn>112</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to maxAttack must begin with the 'this.', 'base.', 'object.' or 'PlayerStats.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>134</line>
        <index>4537</index>
        <endIndex>4545</endIndex>
        <startLine>134</startLine>
        <startColumn>13</startColumn>
        <endLine>134</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="CanvasInput.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 19:05:22.358</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: hotbarSlots.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to CheckInput must begin with the 'this.', 'base.', 'object.' or 'CanvasInput.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>12</line>
        <index>217</index>
        <endIndex>226</endIndex>
        <startLine>12</startLine>
        <startColumn>9</startColumn>
        <endLine>12</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>17</line>
        <index>283</index>
        <endIndex>316</endIndex>
        <startLine>17</startLine>
        <startColumn>13</startColumn>
        <endLine>17</endLine>
        <endColumn>46</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>25</line>
        <index>556</index>
        <endIndex>587</endIndex>
        <startLine>25</startLine>
        <startColumn>18</startColumn>
        <endLine>25</endLine>
        <endColumn>49</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>29</line>
        <index>669</index>
        <endIndex>700</endIndex>
        <startLine>29</startLine>
        <startColumn>18</startColumn>
        <endLine>29</endLine>
        <endColumn>49</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>33</line>
        <index>782</index>
        <endIndex>813</endIndex>
        <startLine>33</startLine>
        <startColumn>18</startColumn>
        <endLine>33</endLine>
        <endColumn>49</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="StatementMustNotUseUnnecessaryParenthesis" ruleCheckId="SA1119">
        <context>The line contains unnecessary parenthesis.</context>
        <line>37</line>
        <index>895</index>
        <endIndex>926</endIndex>
        <startLine>37</startLine>
        <startColumn>18</startColumn>
        <endLine>37</endLine>
        <endColumn>49</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to hotbarSlots must begin with the 'this.', 'base.', 'object.' or 'CanvasInput.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>27</line>
        <index>614</index>
        <endIndex>624</endIndex>
        <startLine>27</startLine>
        <startColumn>13</startColumn>
        <endLine>27</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to hotbarSlots must begin with the 'this.', 'base.', 'object.' or 'CanvasInput.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>31</line>
        <index>727</index>
        <endIndex>737</endIndex>
        <startLine>31</startLine>
        <startColumn>13</startColumn>
        <endLine>31</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to hotbarSlots must begin with the 'this.', 'base.', 'object.' or 'CanvasInput.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>35</line>
        <index>840</index>
        <endIndex>850</endIndex>
        <startLine>35</startLine>
        <startColumn>13</startColumn>
        <endLine>35</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to hotbarSlots must begin with the 'this.', 'base.', 'object.' or 'CanvasInput.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>39</line>
        <index>953</index>
        <endIndex>963</endIndex>
        <startLine>39</startLine>
        <startColumn>13</startColumn>
        <endLine>39</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="InGameUI.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 19:06:50.533</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: healthSlider.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: pauseUI.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: invUI.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: menuPopup.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: lootPopupPanel.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>31</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>38</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>44</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>49</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>54</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>59</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="healthPercent" /&gt;' parameter must not be empty.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to healthSlider must begin with the 'this.', 'base.', 'object.' or 'InGameUI.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>25</line>
        <index>622</index>
        <endIndex>633</endIndex>
        <startLine>25</startLine>
        <startColumn>9</startColumn>
        <endLine>25</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pauseUI must begin with the 'this.', 'base.', 'object.' or 'InGameUI.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>34</line>
        <index>822</index>
        <endIndex>828</endIndex>
        <startLine>34</startLine>
        <startColumn>9</startColumn>
        <endLine>34</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>38</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to invUI must begin with the 'this.', 'base.', 'object.' or 'InGameUI.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>40</line>
        <index>943</index>
        <endIndex>947</endIndex>
        <startLine>40</startLine>
        <startColumn>9</startColumn>
        <endLine>40</endLine>
        <endColumn>13</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>44</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to menuPopup must begin with the 'this.', 'base.', 'object.' or 'InGameUI.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>46</line>
        <index>1064</index>
        <endIndex>1072</endIndex>
        <startLine>46</startLine>
        <startColumn>9</startColumn>
        <endLine>46</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to menuPopup must begin with the 'this.', 'base.', 'object.' or 'InGameUI.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>46</line>
        <index>1085</index>
        <endIndex>1093</endIndex>
        <startLine>46</startLine>
        <startColumn>30</startColumn>
        <endLine>46</endLine>
        <endColumn>38</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>49</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootPopupPanel must begin with the 'this.', 'base.', 'object.' or 'InGameUI.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>51</line>
        <index>1168</index>
        <endIndex>1181</endIndex>
        <startLine>51</startLine>
        <startColumn>9</startColumn>
        <endLine>51</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootPopupPanel must begin with the 'this.', 'base.', 'object.' or 'InGameUI.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>51</line>
        <index>1194</index>
        <endIndex>1207</endIndex>
        <startLine>51</startLine>
        <startColumn>35</startColumn>
        <endLine>51</endLine>
        <endColumn>48</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>54</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootPopupPanel must begin with the 'this.', 'base.', 'object.' or 'InGameUI.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>56</line>
        <index>1280</index>
        <endIndex>1293</endIndex>
        <startLine>56</startLine>
        <startColumn>9</startColumn>
        <endLine>56</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>59</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootPopupPanel must begin with the 'this.', 'base.', 'object.' or 'InGameUI.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>61</line>
        <index>1371</index>
        <endIndex>1384</endIndex>
        <startLine>61</startLine>
        <startColumn>9</startColumn>
        <endLine>61</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="ChestInventory.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 07:39:15.587</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: chestSlots.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: inventoryManager.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to CloseChest must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>17</line>
        <index>436</index>
        <endIndex>445</endIndex>
        <startLine>17</startLine>
        <startColumn>13</startColumn>
        <endLine>17</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to loadedChest must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>18</line>
        <index>463</index>
        <endIndex>473</endIndex>
        <startLine>18</startLine>
        <startColumn>13</startColumn>
        <endLine>18</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inventoryManager must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>622</index>
        <endIndex>637</endIndex>
        <startLine>22</startLine>
        <startColumn>17</startColumn>
        <endLine>22</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to chestSlots must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>668</index>
        <endIndex>677</endIndex>
        <startLine>22</startLine>
        <startColumn>63</startColumn>
        <endLine>22</endLine>
        <endColumn>72</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to loadedChest must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>15</line>
        <index>387</index>
        <endIndex>397</endIndex>
        <startLine>15</startLine>
        <startColumn>13</startColumn>
        <endLine>15</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to gameObject must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>27</line>
        <index>834</index>
        <endIndex>843</endIndex>
        <startLine>27</startLine>
        <startColumn>65</startColumn>
        <endLine>27</endLine>
        <endColumn>74</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inventoryManager must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>30</line>
        <index>925</index>
        <endIndex>940</endIndex>
        <startLine>30</startLine>
        <startColumn>13</startColumn>
        <endLine>30</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inventoryManager must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>28</line>
        <index>861</index>
        <endIndex>876</endIndex>
        <startLine>28</startLine>
        <startColumn>14</startColumn>
        <endLine>28</endLine>
        <endColumn>29</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to loadedChest must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>38</line>
        <index>1067</index>
        <endIndex>1077</endIndex>
        <startLine>38</startLine>
        <startColumn>13</startColumn>
        <endLine>38</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to loadedChest must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>39</line>
        <index>1111</index>
        <endIndex>1121</endIndex>
        <startLine>39</startLine>
        <startColumn>13</startColumn>
        <endLine>39</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ExtractItemsFromInventory must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>39</line>
        <index>1136</index>
        <endIndex>1160</endIndex>
        <startLine>39</startLine>
        <startColumn>38</startColumn>
        <endLine>39</endLine>
        <endColumn>62</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to loadedChest must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>40</line>
        <index>1178</index>
        <endIndex>1188</endIndex>
        <startLine>40</startLine>
        <startColumn>13</startColumn>
        <endLine>40</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to loadedChest must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>1022</index>
        <endIndex>1032</endIndex>
        <startLine>36</startLine>
        <startColumn>13</startColumn>
        <endLine>36</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>51</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>51</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to chestSlots must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>58</line>
        <index>1856</index>
        <endIndex>1865</endIndex>
        <startLine>58</startLine>
        <startColumn>40</startColumn>
        <endLine>58</endLine>
        <endColumn>49</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Destroy must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>59</line>
        <index>1908</index>
        <endIndex>1914</endIndex>
        <startLine>59</startLine>
        <startColumn>17</startColumn>
        <endLine>59</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to chestSlots must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>59</line>
        <index>1916</index>
        <endIndex>1925</endIndex>
        <startLine>59</startLine>
        <startColumn>25</startColumn>
        <endLine>59</endLine>
        <endColumn>34</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to chestSlots must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>60</line>
        <index>1970</index>
        <endIndex>1979</endIndex>
        <startLine>60</startLine>
        <startColumn>17</startColumn>
        <endLine>60</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to chestSlots must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>56</line>
        <index>1768</index>
        <endIndex>1777</endIndex>
        <startLine>56</startLine>
        <startColumn>17</startColumn>
        <endLine>56</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to chestSlots must begin with the 'this.', 'base.', 'object.' or 'ChestInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>54</line>
        <index>1717</index>
        <endIndex>1726</endIndex>
        <startLine>54</startLine>
        <startColumn>29</startColumn>
        <endLine>54</endLine>
        <endColumn>38</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="InventoryManager.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 07:43:50.666</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" ruleCheckId="SA1208">
        <context>System using directives must be placed before all other using directives.</context>
        <line>2</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: slots.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: equipSlots.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: itemPrefab.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: attachedItem.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>41</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>50</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>70</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>83</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>98</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>118</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>136</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to itemGenerator must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>23</line>
        <index>833</index>
        <endIndex>845</endIndex>
        <startLine>23</startLine>
        <startColumn>9</startColumn>
        <endLine>23</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AddItemToSlot must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>28</line>
        <index>1041</index>
        <endIndex>1053</endIndex>
        <startLine>28</startLine>
        <startColumn>9</startColumn>
        <endLine>28</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to itemGenerator must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>28</line>
        <index>1055</index>
        <endIndex>1067</endIndex>
        <startLine>28</startLine>
        <startColumn>23</startColumn>
        <endLine>28</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to equipSlots must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>28</line>
        <index>1089</index>
        <endIndex>1098</endIndex>
        <startLine>28</startLine>
        <startColumn>57</startColumn>
        <endLine>28</endLine>
        <endColumn>66</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AddItemToSlot must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>29</line>
        <index>1114</index>
        <endIndex>1126</endIndex>
        <startLine>29</startLine>
        <startColumn>9</startColumn>
        <endLine>29</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to itemGenerator must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>29</line>
        <index>1128</index>
        <endIndex>1140</endIndex>
        <startLine>29</startLine>
        <startColumn>23</startColumn>
        <endLine>29</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to equipSlots must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>29</line>
        <index>1162</index>
        <endIndex>1171</endIndex>
        <startLine>29</startLine>
        <startColumn>57</startColumn>
        <endLine>29</endLine>
        <endColumn>66</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AddItemToSlot must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>30</line>
        <index>1187</index>
        <endIndex>1199</endIndex>
        <startLine>30</startLine>
        <startColumn>9</startColumn>
        <endLine>30</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to itemGenerator must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>30</line>
        <index>1201</index>
        <endIndex>1213</endIndex>
        <startLine>30</startLine>
        <startColumn>23</startColumn>
        <endLine>30</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to equipSlots must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>30</line>
        <index>1235</index>
        <endIndex>1244</endIndex>
        <startLine>30</startLine>
        <startColumn>57</startColumn>
        <endLine>30</endLine>
        <endColumn>66</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AddItemToSlot must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>31</line>
        <index>1260</index>
        <endIndex>1272</endIndex>
        <startLine>31</startLine>
        <startColumn>9</startColumn>
        <endLine>31</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to itemGenerator must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>31</line>
        <index>1274</index>
        <endIndex>1286</endIndex>
        <startLine>31</startLine>
        <startColumn>23</startColumn>
        <endLine>31</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to equipSlots must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>31</line>
        <index>1308</index>
        <endIndex>1317</endIndex>
        <startLine>31</startLine>
        <startColumn>57</startColumn>
        <endLine>31</endLine>
        <endColumn>66</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AddItem must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>32</line>
        <index>1333</index>
        <endIndex>1339</endIndex>
        <startLine>32</startLine>
        <startColumn>9</startColumn>
        <endLine>32</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>19</line>
        <index>555</index>
        <endIndex>582</endIndex>
        <startLine>19</startLine>
        <startColumn>9</startColumn>
        <endLine>19</endLine>
        <endColumn>36</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="level" /&gt;' parameter must not be empty.</context>
        <line>41</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="equipment" /&gt;' parameter must not be empty.</context>
        <line>41</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AddItem must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>43</line>
        <index>1722</index>
        <endIndex>1728</endIndex>
        <startLine>43</startLine>
        <startColumn>9</startColumn>
        <endLine>43</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to itemGenerator must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>43</line>
        <index>1730</index>
        <endIndex>1742</endIndex>
        <startLine>43</startLine>
        <startColumn>17</startColumn>
        <endLine>43</endLine>
        <endColumn>29</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="item" /&gt;' parameter must not be empty.</context>
        <line>50</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to FindSlotWithItem must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>52</line>
        <index>2033</index>
        <endIndex>2048</endIndex>
        <startLine>52</startLine>
        <startColumn>25</startColumn>
        <endLine>52</endLine>
        <endColumn>40</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to slots must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>52</line>
        <index>2062</index>
        <endIndex>2066</endIndex>
        <startLine>52</startLine>
        <startColumn>54</startColumn>
        <endLine>52</endLine>
        <endColumn>58</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AddItemToSlot must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>61</line>
        <index>2296</index>
        <endIndex>2308</endIndex>
        <startLine>61</startLine>
        <startColumn>13</startColumn>
        <endLine>61</endLine>
        <endColumn>25</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to FindNextOpenSlot must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>61</line>
        <index>2316</index>
        <endIndex>2331</endIndex>
        <startLine>61</startLine>
        <startColumn>33</startColumn>
        <endLine>61</endLine>
        <endColumn>48</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to slots must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>61</line>
        <index>2333</index>
        <endIndex>2337</endIndex>
        <startLine>61</startLine>
        <startColumn>50</startColumn>
        <endLine>61</endLine>
        <endColumn>54</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="item" /&gt;' parameter must not be empty.</context>
        <line>70</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="amount" /&gt;' parameter must not be empty.</context>
        <line>70</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to AddItem must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>74</line>
        <index>2640</index>
        <endIndex>2646</endIndex>
        <startLine>74</startLine>
        <startColumn>13</startColumn>
        <endLine>74</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="item" /&gt;' parameter must not be empty.</context>
        <line>83</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="slot" /&gt;' parameter must not be empty.</context>
        <line>83</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to itemPrefab must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>87</line>
        <index>2990</index>
        <endIndex>2999</endIndex>
        <startLine>87</startLine>
        <startColumn>48</startColumn>
        <endLine>87</endLine>
        <endColumn>57</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="slotList" /&gt;' parameter must not be empty.</context>
        <line>98</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>98</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="itemId" /&gt;' parameter must not be empty.</context>
        <line>118</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="slotList" /&gt;' parameter must not be empty.</context>
        <line>118</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>118</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>129</line>
        <index>4260</index>
        <endIndex>4278</endIndex>
        <startLine>129</startLine>
        <startColumn>9</startColumn>
        <endLine>129</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to FindNextOpenSlot must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>142</line>
        <index>4548</index>
        <endIndex>4563</endIndex>
        <startLine>142</startLine>
        <startColumn>17</startColumn>
        <endLine>142</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to slots must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>142</line>
        <index>4565</index>
        <endIndex>4569</endIndex>
        <startLine>142</startLine>
        <startColumn>34</startColumn>
        <endLine>142</endLine>
        <endColumn>38</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attachedItem must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>142</line>
        <index>4590</index>
        <endIndex>4601</endIndex>
        <startLine>142</startLine>
        <startColumn>59</startColumn>
        <endLine>142</endLine>
        <endColumn>70</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attachedItem must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>143</line>
        <index>4622</index>
        <endIndex>4633</endIndex>
        <startLine>143</startLine>
        <startColumn>17</startColumn>
        <endLine>143</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to attachedItem must begin with the 'this.', 'base.', 'object.' or 'InventoryManager.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>140</line>
        <index>4494</index>
        <endIndex>4505</endIndex>
        <startLine>140</startLine>
        <startColumn>17</startColumn>
        <endLine>140</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="LootInventory.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 08:08:24.083</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsForMultiLineStatementsMustNotShareLine" ruleCheckId="SA1500">
        <context>If a statement spans multiple lines, the opening curly bracket must be placed on its own line.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" ruleCheckId="SA1505">
        <context>An opening curly bracket must not be followed by a blank line.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" ruleCheckId="SA1508">
        <context>A closing curly bracket must not be preceded by a blank line.</context>
        <line>72</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="TabsMustNotBeUsed" ruleCheckId="SA1027">
        <context>Tabs are not allowed. Use spaces instead.</context>
        <line>9</line>
        <index>172</index>
        <endIndex>172</endIndex>
        <startLine>9</startLine>
        <startColumn>1</startColumn>
        <endLine>9</endLine>
        <endColumn>1</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: lootSlots.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: inventoryManager.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="bag" /&gt;' parameter must not be empty.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to loadedBag must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>21</line>
        <index>505</index>
        <endIndex>513</endIndex>
        <startLine>21</startLine>
        <startColumn>9</startColumn>
        <endLine>21</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inventoryManager must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>25</line>
        <index>597</index>
        <endIndex>612</endIndex>
        <startLine>25</startLine>
        <startColumn>13</startColumn>
        <endLine>25</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootSlots must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>25</line>
        <index>643</index>
        <endIndex>651</endIndex>
        <startLine>25</startLine>
        <startColumn>59</startColumn>
        <endLine>25</endLine>
        <endColumn>67</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'foreach' is invalid.</context>
        <line>23</line>
        <index>533</index>
        <endIndex>539</endIndex>
        <startLine>23</startLine>
        <startColumn>9</startColumn>
        <endLine>23</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to loadedBag must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>912</index>
        <endIndex>920</endIndex>
        <startLine>36</startLine>
        <startColumn>9</startColumn>
        <endLine>36</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ExtractItemsFromInventory must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>930</index>
        <endIndex>954</endIndex>
        <startLine>36</startLine>
        <startColumn>27</startColumn>
        <endLine>36</endLine>
        <endColumn>51</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to loadedBag must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>37</line>
        <index>968</index>
        <endIndex>976</endIndex>
        <startLine>37</startLine>
        <startColumn>9</startColumn>
        <endLine>37</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>46</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketMustBeFollowedByBlankLine" ruleCheckId="SA1513">
        <context>Statements or elements wrapped in curly brackets must be followed by a blank line.</context>
        <line>57</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>46</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>63</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootSlots must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>53</line>
        <index>1548</index>
        <endIndex>1556</endIndex>
        <startLine>53</startLine>
        <startColumn>40</startColumn>
        <endLine>53</endLine>
        <endColumn>48</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to Destroy must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>54</line>
        <index>1599</index>
        <endIndex>1605</endIndex>
        <startLine>54</startLine>
        <startColumn>17</startColumn>
        <endLine>54</endLine>
        <endColumn>23</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootSlots must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>54</line>
        <index>1607</index>
        <endIndex>1615</endIndex>
        <startLine>54</startLine>
        <startColumn>25</startColumn>
        <endLine>54</endLine>
        <endColumn>33</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootSlots must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>55</line>
        <index>1660</index>
        <endIndex>1668</endIndex>
        <startLine>55</startLine>
        <startColumn>17</startColumn>
        <endLine>55</endLine>
        <endColumn>25</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootSlots must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>51</line>
        <index>1461</index>
        <endIndex>1469</endIndex>
        <startLine>51</startLine>
        <startColumn>16</startColumn>
        <endLine>51</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to lootSlots must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>49</line>
        <index>1412</index>
        <endIndex>1420</endIndex>
        <startLine>49</startLine>
        <startColumn>28</startColumn>
        <endLine>49</endLine>
        <endColumn>36</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'for' is invalid.</context>
        <line>49</line>
        <index>1393</index>
        <endIndex>1395</endIndex>
        <startLine>49</startLine>
        <startColumn>9</startColumn>
        <endLine>49</endLine>
        <endColumn>11</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>51</line>
        <index>1458</index>
        <endIndex>1459</endIndex>
        <startLine>51</startLine>
        <startColumn>13</startColumn>
        <endLine>51</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>63</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketMustBeFollowedByBlankLine" ruleCheckId="SA1513">
        <context>Statements or elements wrapped in curly brackets must be followed by a blank line.</context>
        <line>68</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inventoryManager must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>67</line>
        <index>1978</index>
        <endIndex>1993</endIndex>
        <startLine>67</startLine>
        <startColumn>13</startColumn>
        <endLine>67</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inventoryManager must begin with the 'this.', 'base.', 'object.' or 'LootInventory.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>65</line>
        <index>1914</index>
        <endIndex>1929</endIndex>
        <startLine>65</startLine>
        <startColumn>14</startColumn>
        <endLine>65</endLine>
        <endColumn>29</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="Tooltip.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 18:41:06.290</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: title.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: description.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="item" /&gt;' parameter must not be empty.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to PositionRelativeToScreen must begin with the 'this.', 'base.', 'object.' or 'Tooltip.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>19</line>
        <index>461</index>
        <endIndex>484</endIndex>
        <startLine>19</startLine>
        <startColumn>9</startColumn>
        <endLine>19</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to title must begin with the 'this.', 'base.', 'object.' or 'Tooltip.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>21</line>
        <index>535</index>
        <endIndex>539</endIndex>
        <startLine>21</startLine>
        <startColumn>9</startColumn>
        <endLine>21</endLine>
        <endColumn>13</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to description must begin with the 'this.', 'base.', 'object.' or 'Tooltip.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>569</index>
        <endIndex>579</endIndex>
        <startLine>22</startLine>
        <startColumn>9</startColumn>
        <endLine>22</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetLevelString must begin with the 'this.', 'base.', 'object.' or 'Tooltip.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>588</index>
        <endIndex>601</endIndex>
        <startLine>22</startLine>
        <startColumn>28</startColumn>
        <endLine>22</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetAttackString must begin with the 'this.', 'base.', 'object.' or 'Tooltip.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>611</index>
        <endIndex>625</endIndex>
        <startLine>22</startLine>
        <startColumn>51</startColumn>
        <endLine>22</endLine>
        <endColumn>65</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetDefenseString must begin with the 'this.', 'base.', 'object.' or 'Tooltip.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>22</line>
        <index>635</index>
        <endIndex>650</endIndex>
        <startLine>22</startLine>
        <startColumn>75</startColumn>
        <endLine>22</endLine>
        <endColumn>90</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to GetValueString must begin with the 'this.', 'base.', 'object.' or 'Tooltip.' or 'MonoBehaviour.' prefix to indicate the intended method call. </context>
        <line>23</line>
        <index>688</index>
        <endIndex>701</endIndex>
        <startLine>23</startLine>
        <startColumn>28</startColumn>
        <endLine>23</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="UseStringEmptyForEmptyStrings" ruleCheckId="SA1122">
        <context>Use string.Empty rather than "".</context>
        <line>30</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>36</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>36</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="UseStringEmptyForEmptyStrings" ruleCheckId="SA1122">
        <context>Use string.Empty rather than "".</context>
        <line>40</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>46</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>46</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="UseStringEmptyForEmptyStrings" ruleCheckId="SA1122">
        <context>Use string.Empty rather than "".</context>
        <line>50</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>61</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>61</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="UseStringEmptyForEmptyStrings" ruleCheckId="SA1122">
        <context>Use string.Empty rather than "".</context>
        <line>65</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>74</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>84</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>84</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="EquipSlot.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 19:00:59.094</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>2</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: equipmentSlot.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: emptySprite.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: fullSprite.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: slotImage.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: playerStat.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="SingleLineCommentMustBePrecededByBlankLine" ruleCheckId="SA1515">
        <context>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ItemDropIntoEmpty must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>24</line>
        <index>844</index>
        <endIndex>860</endIndex>
        <startLine>24</startLine>
        <startColumn>13</startColumn>
        <endLine>24</endLine>
        <endColumn>29</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ItemCanBeEquipped must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>21</line>
        <index>705</index>
        <endIndex>721</endIndex>
        <startLine>21</startLine>
        <startColumn>28</startColumn>
        <endLine>21</endLine>
        <endColumn>44</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="droppedItem" /&gt;' parameter must not be empty.</context>
        <line>33</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to LinkItem must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>38</line>
        <index>1366</index>
        <endIndex>1373</endIndex>
        <startLine>38</startLine>
        <startColumn>13</startColumn>
        <endLine>38</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerStat must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>39</line>
        <index>1402</index>
        <endIndex>1411</endIndex>
        <startLine>39</startLine>
        <startColumn>13</startColumn>
        <endLine>39</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to slotImage must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>41</line>
        <index>1499</index>
        <endIndex>1507</endIndex>
        <startLine>41</startLine>
        <startColumn>13</startColumn>
        <endLine>41</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to fullSprite must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>41</line>
        <index>1518</index>
        <endIndex>1527</endIndex>
        <startLine>41</startLine>
        <startColumn>32</startColumn>
        <endLine>41</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to item must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>1294</index>
        <endIndex>1297</endIndex>
        <startLine>36</startLine>
        <startColumn>28</startColumn>
        <endLine>36</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ItemCanBeEquipped must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>36</line>
        <index>1310</index>
        <endIndex>1326</endIndex>
        <startLine>36</startLine>
        <startColumn>44</startColumn>
        <endLine>36</endLine>
        <endColumn>60</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="droppedItem" /&gt;' parameter must not be empty.</context>
        <line>49</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerStat must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>53</line>
        <index>1889</index>
        <endIndex>1898</endIndex>
        <startLine>53</startLine>
        <startColumn>13</startColumn>
        <endLine>53</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to item must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>53</line>
        <index>1912</index>
        <endIndex>1915</endIndex>
        <startLine>53</startLine>
        <startColumn>36</startColumn>
        <endLine>53</endLine>
        <endColumn>39</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to LinkItem must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>55</line>
        <index>1964</index>
        <endIndex>1971</endIndex>
        <startLine>55</startLine>
        <startColumn>13</startColumn>
        <endLine>55</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerStat must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>56</line>
        <index>2000</index>
        <endIndex>2009</endIndex>
        <startLine>56</startLine>
        <startColumn>13</startColumn>
        <endLine>56</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to slotImage must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>58</line>
        <index>2097</index>
        <endIndex>2105</endIndex>
        <startLine>58</startLine>
        <startColumn>13</startColumn>
        <endLine>58</endLine>
        <endColumn>21</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to fullSprite must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>58</line>
        <index>2116</index>
        <endIndex>2125</endIndex>
        <startLine>58</startLine>
        <startColumn>32</startColumn>
        <endLine>58</endLine>
        <endColumn>41</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to item must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>51</line>
        <index>1817</index>
        <endIndex>1820</endIndex>
        <startLine>51</startLine>
        <startColumn>28</startColumn>
        <endLine>51</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ItemCanBeEquipped must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>51</line>
        <index>1833</index>
        <endIndex>1849</endIndex>
        <startLine>51</startLine>
        <startColumn>44</startColumn>
        <endLine>51</endLine>
        <endColumn>60</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to slotImage must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>67</line>
        <index>2307</index>
        <endIndex>2315</endIndex>
        <startLine>67</startLine>
        <startColumn>9</startColumn>
        <endLine>67</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to emptySprite must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>67</line>
        <index>2326</index>
        <endIndex>2336</endIndex>
        <startLine>67</startLine>
        <startColumn>28</startColumn>
        <endLine>67</endLine>
        <endColumn>38</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="droppedItem" /&gt;' parameter must not be empty.</context>
        <line>75</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementReturnValueDocumentationMustHaveText" ruleCheckId="SA1616">
        <context>The returns section in the documentation header must not be empty.</context>
        <line>75</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>75</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to equipmentSlot must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>77</line>
        <index>2624</index>
        <endIndex>2636</endIndex>
        <startLine>77</startLine>
        <startColumn>49</startColumn>
        <endLine>77</endLine>
        <endColumn>61</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to playerStat must begin with the 'this.', 'base.', 'object.' or 'EquipSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>77</line>
        <index>2641</index>
        <endIndex>2650</endIndex>
        <startLine>77</startLine>
        <startColumn>66</startColumn>
        <endLine>77</endLine>
        <endColumn>75</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="InventoryHotbarSlot.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 18:45:05.792</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the summary tag contains incorrectly spelled words: 'hotbar'</context>
        <line>4</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: hotbarSlot.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="itemInstance" /&gt;' parameter must not be empty.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to hotbarSlot must begin with the 'this.', 'base.', 'object.' or 'InventoryHotbarSlot.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>15</line>
        <index>425</index>
        <endIndex>434</endIndex>
        <startLine>15</startLine>
        <startColumn>9</startColumn>
        <endLine>15</endLine>
        <endColumn>18</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="Item.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 18:45:44.625</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>7</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all constructors.</context>
        <line>49</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>9</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>12</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>15</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Title must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>21</line>
        <index>756</index>
        <endIndex>760</endIndex>
        <startLine>21</startLine>
        <startColumn>9</startColumn>
        <endLine>21</endLine>
        <endColumn>13</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Value must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>22</line>
        <index>780</index>
        <endIndex>784</endIndex>
        <startLine>22</startLine>
        <startColumn>9</startColumn>
        <endLine>22</endLine>
        <endColumn>13</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Attack must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>23</line>
        <index>804</index>
        <endIndex>809</endIndex>
        <startLine>23</startLine>
        <startColumn>9</startColumn>
        <endLine>23</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to MaxAttack must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>24</line>
        <index>830</index>
        <endIndex>838</endIndex>
        <startLine>24</startLine>
        <startColumn>9</startColumn>
        <endLine>24</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Defence must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>25</line>
        <index>862</index>
        <endIndex>868</endIndex>
        <startLine>25</startLine>
        <startColumn>9</startColumn>
        <endLine>25</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Description must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>26</line>
        <index>890</index>
        <endIndex>900</endIndex>
        <startLine>26</startLine>
        <startColumn>9</startColumn>
        <endLine>26</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Stackable must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>27</line>
        <index>926</index>
        <endIndex>934</endIndex>
        <startLine>27</startLine>
        <startColumn>9</startColumn>
        <endLine>27</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to EquippedSlot must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>28</line>
        <index>958</index>
        <endIndex>969</endIndex>
        <startLine>28</startLine>
        <startColumn>9</startColumn>
        <endLine>28</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Sprites must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>29</line>
        <index>996</index>
        <endIndex>1002</endIndex>
        <startLine>29</startLine>
        <startColumn>9</startColumn>
        <endLine>29</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to ItemLevel must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>30</line>
        <index>1024</index>
        <endIndex>1032</endIndex>
        <startLine>30</startLine>
        <startColumn>9</startColumn>
        <endLine>30</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to ItemColor must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>31</line>
        <index>1056</index>
        <endIndex>1064</endIndex>
        <startLine>31</startLine>
        <startColumn>9</startColumn>
        <endLine>31</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>34</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Title must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>36</line>
        <index>1215</index>
        <endIndex>1219</endIndex>
        <startLine>36</startLine>
        <startColumn>9</startColumn>
        <endLine>36</endLine>
        <endColumn>13</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Value must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>37</line>
        <index>1239</index>
        <endIndex>1243</endIndex>
        <startLine>37</startLine>
        <startColumn>9</startColumn>
        <endLine>37</endLine>
        <endColumn>13</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Attack must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>38</line>
        <index>1263</index>
        <endIndex>1268</endIndex>
        <startLine>38</startLine>
        <startColumn>9</startColumn>
        <endLine>38</endLine>
        <endColumn>14</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to MaxAttack must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>39</line>
        <index>1284</index>
        <endIndex>1292</endIndex>
        <startLine>39</startLine>
        <startColumn>9</startColumn>
        <endLine>39</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Defence must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>40</line>
        <index>1308</index>
        <endIndex>1314</endIndex>
        <startLine>40</startLine>
        <startColumn>9</startColumn>
        <endLine>40</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Description must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>41</line>
        <index>1330</index>
        <endIndex>1340</endIndex>
        <startLine>41</startLine>
        <startColumn>9</startColumn>
        <endLine>41</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Stackable must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>42</line>
        <index>1366</index>
        <endIndex>1374</endIndex>
        <startLine>42</startLine>
        <startColumn>9</startColumn>
        <endLine>42</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to EquippedSlot must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>43</line>
        <index>1398</index>
        <endIndex>1409</endIndex>
        <startLine>43</startLine>
        <startColumn>9</startColumn>
        <endLine>43</endLine>
        <endColumn>20</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to Sprites must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>44</line>
        <index>1426</index>
        <endIndex>1432</endIndex>
        <startLine>44</startLine>
        <startColumn>9</startColumn>
        <endLine>44</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to ItemLevel must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>45</line>
        <index>1454</index>
        <endIndex>1462</endIndex>
        <startLine>45</startLine>
        <startColumn>9</startColumn>
        <endLine>45</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixLocalCallsWithThis" ruleCheckId="SA1101">
        <context>The call to ItemColor must begin with the 'this.' prefix to indicate that the item is a member of the class.</context>
        <line>46</line>
        <index>1486</index>
        <endIndex>1494</endIndex>
        <startLine>46</startLine>
        <startColumn>9</startColumn>
        <endLine>46</endLine>
        <endColumn>17</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="UseStringEmptyForEmptyStrings" ruleCheckId="SA1122">
        <context>Use string.Empty rather than "".</context>
        <line>46</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The constructor must have a documentation header.</context>
        <line>49</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementMustNotBeOnSingleLine" ruleCheckId="SA1502">
        <context>The constructor must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</context>
        <line>49</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="ItemDelete.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 18:47:33.735</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="droppedItem" /&gt;' parameter must not be empty.</context>
        <line>10</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to item must begin with the 'this.', 'base.', 'object.' or 'ItemDelete.' or 'ItemSlot.' prefix to indicate the intended method call. </context>
        <line>13</line>
        <index>407</index>
        <endIndex>410</endIndex>
        <startLine>13</startLine>
        <startColumn>28</startColumn>
        <endLine>13</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>12</line>
        <index>327</index>
        <endIndex>377</endIndex>
        <startLine>12</startLine>
        <startColumn>9</startColumn>
        <endLine>12</endLine>
        <endColumn>59</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
  <sourcecode name="ItemInstance.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2018/06/03 08:07:06.931</styleCop>
      <settingsFile>2018/06/03 08:07:06.909</settingsFile>
      <sourceFile>2018/06/04 18:53:25.449</sourceFile>
      <parser>2018/06/03 08:07:06.931</parser>
      <StyleCop.CSharp.DocumentationRules>2018/06/03 08:07:06.931</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>-1570199419</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2018/06/03 08:07:06.931</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2018/06/03 08:07:06.931</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2018/06/03 08:07:06.931</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: item.</context>
        <line>11</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: slot.</context>
        <line>14</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: equipped.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: stackText.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: attached.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: itemSprites.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>39</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>56</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>72</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>83</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>109</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>128</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>133</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>142</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>159</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="Item" /&gt;' parameter must not be empty.</context>
        <line>39</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustBeginWithLowerCaseLetter" ruleCheckId="SA1306">
        <context>Variable names and private field names must start with a lower-case letter: Item.</context>
        <line>39</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="eventData" /&gt;' parameter must not be empty.</context>
        <line>56</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>72</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>83</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementDocumentationHeaderMustBePrecededByBlankLine" ruleCheckId="SA1514">
        <context>A documentation header must be preceded by a blank line or must be the first item in its scope.</context>
        <line>94</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>97</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>120</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>128</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>133</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementParameterDocumentationMustHaveText" ruleCheckId="SA1614">
        <context>The documentation text within the param tag for the '&lt;param name="i" /&gt;' parameter must not be empty.</context>
        <line>142</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>159</line>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
</stylecopresultscache>